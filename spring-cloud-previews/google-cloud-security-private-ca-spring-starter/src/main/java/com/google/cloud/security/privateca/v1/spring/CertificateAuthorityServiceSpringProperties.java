/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.security.privateca.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for CertificateAuthorityService client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.security.privateca.v1.certificate-authority-service")
public class CertificateAuthorityServiceSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of default transport channel provider to use REST instead of gRPC. */
  private boolean useRest = false;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for createCertificate. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createCertificateRetry;
  /**
   * Allow override of retry settings at method-level for getCertificate. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getCertificateRetry;
  /**
   * Allow override of retry settings at method-level for listCertificates. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listCertificatesRetry;
  /**
   * Allow override of retry settings at method-level for revokeCertificate. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry revokeCertificateRetry;
  /**
   * Allow override of retry settings at method-level for updateCertificate. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateCertificateRetry;
  /**
   * Allow override of retry settings at method-level for fetchCertificateAuthorityCsr. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry fetchCertificateAuthorityCsrRetry;
  /**
   * Allow override of retry settings at method-level for getCertificateAuthority. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getCertificateAuthorityRetry;
  /**
   * Allow override of retry settings at method-level for listCertificateAuthorities. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listCertificateAuthoritiesRetry;
  /**
   * Allow override of retry settings at method-level for getCaPool. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getCaPoolRetry;
  /**
   * Allow override of retry settings at method-level for listCaPools. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listCaPoolsRetry;
  /**
   * Allow override of retry settings at method-level for fetchCaCerts. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry fetchCaCertsRetry;
  /**
   * Allow override of retry settings at method-level for getCertificateRevocationList. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getCertificateRevocationListRetry;
  /**
   * Allow override of retry settings at method-level for listCertificateRevocationLists. If
   * defined, this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listCertificateRevocationListsRetry;
  /**
   * Allow override of retry settings at method-level for getCertificateTemplate. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getCertificateTemplateRetry;
  /**
   * Allow override of retry settings at method-level for listCertificateTemplates. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listCertificateTemplatesRetry;
  /**
   * Allow override of retry settings at method-level for listLocations. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listLocationsRetry;
  /**
   * Allow override of retry settings at method-level for getLocation. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getLocationRetry;
  /**
   * Allow override of retry settings at method-level for setIamPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry setIamPolicyRetry;
  /**
   * Allow override of retry settings at method-level for getIamPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getIamPolicyRetry;
  /**
   * Allow override of retry settings at method-level for testIamPermissions. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry testIamPermissionsRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getCreateCertificateRetry() {
    return this.createCertificateRetry;
  }

  public void setCreateCertificateRetry(Retry createCertificateRetry) {
    this.createCertificateRetry = createCertificateRetry;
  }

  public Retry getGetCertificateRetry() {
    return this.getCertificateRetry;
  }

  public void setGetCertificateRetry(Retry getCertificateRetry) {
    this.getCertificateRetry = getCertificateRetry;
  }

  public Retry getListCertificatesRetry() {
    return this.listCertificatesRetry;
  }

  public void setListCertificatesRetry(Retry listCertificatesRetry) {
    this.listCertificatesRetry = listCertificatesRetry;
  }

  public Retry getRevokeCertificateRetry() {
    return this.revokeCertificateRetry;
  }

  public void setRevokeCertificateRetry(Retry revokeCertificateRetry) {
    this.revokeCertificateRetry = revokeCertificateRetry;
  }

  public Retry getUpdateCertificateRetry() {
    return this.updateCertificateRetry;
  }

  public void setUpdateCertificateRetry(Retry updateCertificateRetry) {
    this.updateCertificateRetry = updateCertificateRetry;
  }

  public Retry getFetchCertificateAuthorityCsrRetry() {
    return this.fetchCertificateAuthorityCsrRetry;
  }

  public void setFetchCertificateAuthorityCsrRetry(Retry fetchCertificateAuthorityCsrRetry) {
    this.fetchCertificateAuthorityCsrRetry = fetchCertificateAuthorityCsrRetry;
  }

  public Retry getGetCertificateAuthorityRetry() {
    return this.getCertificateAuthorityRetry;
  }

  public void setGetCertificateAuthorityRetry(Retry getCertificateAuthorityRetry) {
    this.getCertificateAuthorityRetry = getCertificateAuthorityRetry;
  }

  public Retry getListCertificateAuthoritiesRetry() {
    return this.listCertificateAuthoritiesRetry;
  }

  public void setListCertificateAuthoritiesRetry(Retry listCertificateAuthoritiesRetry) {
    this.listCertificateAuthoritiesRetry = listCertificateAuthoritiesRetry;
  }

  public Retry getGetCaPoolRetry() {
    return this.getCaPoolRetry;
  }

  public void setGetCaPoolRetry(Retry getCaPoolRetry) {
    this.getCaPoolRetry = getCaPoolRetry;
  }

  public Retry getListCaPoolsRetry() {
    return this.listCaPoolsRetry;
  }

  public void setListCaPoolsRetry(Retry listCaPoolsRetry) {
    this.listCaPoolsRetry = listCaPoolsRetry;
  }

  public Retry getFetchCaCertsRetry() {
    return this.fetchCaCertsRetry;
  }

  public void setFetchCaCertsRetry(Retry fetchCaCertsRetry) {
    this.fetchCaCertsRetry = fetchCaCertsRetry;
  }

  public Retry getGetCertificateRevocationListRetry() {
    return this.getCertificateRevocationListRetry;
  }

  public void setGetCertificateRevocationListRetry(Retry getCertificateRevocationListRetry) {
    this.getCertificateRevocationListRetry = getCertificateRevocationListRetry;
  }

  public Retry getListCertificateRevocationListsRetry() {
    return this.listCertificateRevocationListsRetry;
  }

  public void setListCertificateRevocationListsRetry(Retry listCertificateRevocationListsRetry) {
    this.listCertificateRevocationListsRetry = listCertificateRevocationListsRetry;
  }

  public Retry getGetCertificateTemplateRetry() {
    return this.getCertificateTemplateRetry;
  }

  public void setGetCertificateTemplateRetry(Retry getCertificateTemplateRetry) {
    this.getCertificateTemplateRetry = getCertificateTemplateRetry;
  }

  public Retry getListCertificateTemplatesRetry() {
    return this.listCertificateTemplatesRetry;
  }

  public void setListCertificateTemplatesRetry(Retry listCertificateTemplatesRetry) {
    this.listCertificateTemplatesRetry = listCertificateTemplatesRetry;
  }

  public Retry getListLocationsRetry() {
    return this.listLocationsRetry;
  }

  public void setListLocationsRetry(Retry listLocationsRetry) {
    this.listLocationsRetry = listLocationsRetry;
  }

  public Retry getGetLocationRetry() {
    return this.getLocationRetry;
  }

  public void setGetLocationRetry(Retry getLocationRetry) {
    this.getLocationRetry = getLocationRetry;
  }

  public Retry getSetIamPolicyRetry() {
    return this.setIamPolicyRetry;
  }

  public void setSetIamPolicyRetry(Retry setIamPolicyRetry) {
    this.setIamPolicyRetry = setIamPolicyRetry;
  }

  public Retry getGetIamPolicyRetry() {
    return this.getIamPolicyRetry;
  }

  public void setGetIamPolicyRetry(Retry getIamPolicyRetry) {
    this.getIamPolicyRetry = getIamPolicyRetry;
  }

  public Retry getTestIamPermissionsRetry() {
    return this.testIamPermissionsRetry;
  }

  public void setTestIamPermissionsRetry(Retry testIamPermissionsRetry) {
    this.testIamPermissionsRetry = testIamPermissionsRetry;
  }
}
