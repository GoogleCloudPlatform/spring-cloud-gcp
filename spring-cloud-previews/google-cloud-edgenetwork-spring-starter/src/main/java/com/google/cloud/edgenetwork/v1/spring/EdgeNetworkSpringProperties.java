/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.edgenetwork.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for EdgeNetwork client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.edgenetwork.v1.edge-network")
public class EdgeNetworkSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of default transport channel provider to use REST instead of gRPC. */
  private boolean useRest = false;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for initializeZone. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry initializeZoneRetry;
  /**
   * Allow override of retry settings at method-level for listZones. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listZonesRetry;
  /**
   * Allow override of retry settings at method-level for getZone. If defined, this takes precedence
   * over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getZoneRetry;
  /**
   * Allow override of retry settings at method-level for listNetworks. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listNetworksRetry;
  /**
   * Allow override of retry settings at method-level for getNetwork. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getNetworkRetry;
  /**
   * Allow override of retry settings at method-level for diagnoseNetwork. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry diagnoseNetworkRetry;
  /**
   * Allow override of retry settings at method-level for listSubnets. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listSubnetsRetry;
  /**
   * Allow override of retry settings at method-level for getSubnet. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getSubnetRetry;
  /**
   * Allow override of retry settings at method-level for listInterconnects. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listInterconnectsRetry;
  /**
   * Allow override of retry settings at method-level for getInterconnect. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getInterconnectRetry;
  /**
   * Allow override of retry settings at method-level for diagnoseInterconnect. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry diagnoseInterconnectRetry;
  /**
   * Allow override of retry settings at method-level for listInterconnectAttachments. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listInterconnectAttachmentsRetry;
  /**
   * Allow override of retry settings at method-level for getInterconnectAttachment. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getInterconnectAttachmentRetry;
  /**
   * Allow override of retry settings at method-level for listRouters. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listRoutersRetry;
  /**
   * Allow override of retry settings at method-level for getRouter. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getRouterRetry;
  /**
   * Allow override of retry settings at method-level for diagnoseRouter. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry diagnoseRouterRetry;
  /**
   * Allow override of retry settings at method-level for listLocations. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listLocationsRetry;
  /**
   * Allow override of retry settings at method-level for getLocation. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getLocationRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getInitializeZoneRetry() {
    return this.initializeZoneRetry;
  }

  public void setInitializeZoneRetry(Retry initializeZoneRetry) {
    this.initializeZoneRetry = initializeZoneRetry;
  }

  public Retry getListZonesRetry() {
    return this.listZonesRetry;
  }

  public void setListZonesRetry(Retry listZonesRetry) {
    this.listZonesRetry = listZonesRetry;
  }

  public Retry getGetZoneRetry() {
    return this.getZoneRetry;
  }

  public void setGetZoneRetry(Retry getZoneRetry) {
    this.getZoneRetry = getZoneRetry;
  }

  public Retry getListNetworksRetry() {
    return this.listNetworksRetry;
  }

  public void setListNetworksRetry(Retry listNetworksRetry) {
    this.listNetworksRetry = listNetworksRetry;
  }

  public Retry getGetNetworkRetry() {
    return this.getNetworkRetry;
  }

  public void setGetNetworkRetry(Retry getNetworkRetry) {
    this.getNetworkRetry = getNetworkRetry;
  }

  public Retry getDiagnoseNetworkRetry() {
    return this.diagnoseNetworkRetry;
  }

  public void setDiagnoseNetworkRetry(Retry diagnoseNetworkRetry) {
    this.diagnoseNetworkRetry = diagnoseNetworkRetry;
  }

  public Retry getListSubnetsRetry() {
    return this.listSubnetsRetry;
  }

  public void setListSubnetsRetry(Retry listSubnetsRetry) {
    this.listSubnetsRetry = listSubnetsRetry;
  }

  public Retry getGetSubnetRetry() {
    return this.getSubnetRetry;
  }

  public void setGetSubnetRetry(Retry getSubnetRetry) {
    this.getSubnetRetry = getSubnetRetry;
  }

  public Retry getListInterconnectsRetry() {
    return this.listInterconnectsRetry;
  }

  public void setListInterconnectsRetry(Retry listInterconnectsRetry) {
    this.listInterconnectsRetry = listInterconnectsRetry;
  }

  public Retry getGetInterconnectRetry() {
    return this.getInterconnectRetry;
  }

  public void setGetInterconnectRetry(Retry getInterconnectRetry) {
    this.getInterconnectRetry = getInterconnectRetry;
  }

  public Retry getDiagnoseInterconnectRetry() {
    return this.diagnoseInterconnectRetry;
  }

  public void setDiagnoseInterconnectRetry(Retry diagnoseInterconnectRetry) {
    this.diagnoseInterconnectRetry = diagnoseInterconnectRetry;
  }

  public Retry getListInterconnectAttachmentsRetry() {
    return this.listInterconnectAttachmentsRetry;
  }

  public void setListInterconnectAttachmentsRetry(Retry listInterconnectAttachmentsRetry) {
    this.listInterconnectAttachmentsRetry = listInterconnectAttachmentsRetry;
  }

  public Retry getGetInterconnectAttachmentRetry() {
    return this.getInterconnectAttachmentRetry;
  }

  public void setGetInterconnectAttachmentRetry(Retry getInterconnectAttachmentRetry) {
    this.getInterconnectAttachmentRetry = getInterconnectAttachmentRetry;
  }

  public Retry getListRoutersRetry() {
    return this.listRoutersRetry;
  }

  public void setListRoutersRetry(Retry listRoutersRetry) {
    this.listRoutersRetry = listRoutersRetry;
  }

  public Retry getGetRouterRetry() {
    return this.getRouterRetry;
  }

  public void setGetRouterRetry(Retry getRouterRetry) {
    this.getRouterRetry = getRouterRetry;
  }

  public Retry getDiagnoseRouterRetry() {
    return this.diagnoseRouterRetry;
  }

  public void setDiagnoseRouterRetry(Retry diagnoseRouterRetry) {
    this.diagnoseRouterRetry = diagnoseRouterRetry;
  }

  public Retry getListLocationsRetry() {
    return this.listLocationsRetry;
  }

  public void setListLocationsRetry(Retry listLocationsRetry) {
    this.listLocationsRetry = listLocationsRetry;
  }

  public Retry getGetLocationRetry() {
    return this.getLocationRetry;
  }

  public void setGetLocationRetry(Retry getLocationRetry) {
    this.getLocationRetry = getLocationRetry;
  }
}
