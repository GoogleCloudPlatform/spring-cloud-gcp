/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.config.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for Config client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.config.v1.config")
public class ConfigSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of default transport channel provider to use REST instead of gRPC. */
  private boolean useRest = false;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for listDeployments. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listDeploymentsRetry;
  /**
   * Allow override of retry settings at method-level for getDeployment. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getDeploymentRetry;
  /**
   * Allow override of retry settings at method-level for listRevisions. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listRevisionsRetry;
  /**
   * Allow override of retry settings at method-level for getRevision. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getRevisionRetry;
  /**
   * Allow override of retry settings at method-level for getResource. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getResourceRetry;
  /**
   * Allow override of retry settings at method-level for listResources. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listResourcesRetry;
  /**
   * Allow override of retry settings at method-level for exportDeploymentStatefile. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry exportDeploymentStatefileRetry;
  /**
   * Allow override of retry settings at method-level for exportRevisionStatefile. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry exportRevisionStatefileRetry;
  /**
   * Allow override of retry settings at method-level for importStatefile. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry importStatefileRetry;
  /**
   * Allow override of retry settings at method-level for deleteStatefile. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteStatefileRetry;
  /**
   * Allow override of retry settings at method-level for exportLockInfo. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry exportLockInfoRetry;
  /**
   * Allow override of retry settings at method-level for getPreview. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getPreviewRetry;
  /**
   * Allow override of retry settings at method-level for listPreviews. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listPreviewsRetry;
  /**
   * Allow override of retry settings at method-level for exportPreviewResult. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry exportPreviewResultRetry;
  /**
   * Allow override of retry settings at method-level for listTerraformVersions. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listTerraformVersionsRetry;
  /**
   * Allow override of retry settings at method-level for getTerraformVersion. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getTerraformVersionRetry;
  /**
   * Allow override of retry settings at method-level for listLocations. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listLocationsRetry;
  /**
   * Allow override of retry settings at method-level for getLocation. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getLocationRetry;
  /**
   * Allow override of retry settings at method-level for setIamPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry setIamPolicyRetry;
  /**
   * Allow override of retry settings at method-level for getIamPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getIamPolicyRetry;
  /**
   * Allow override of retry settings at method-level for testIamPermissions. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry testIamPermissionsRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getListDeploymentsRetry() {
    return this.listDeploymentsRetry;
  }

  public void setListDeploymentsRetry(Retry listDeploymentsRetry) {
    this.listDeploymentsRetry = listDeploymentsRetry;
  }

  public Retry getGetDeploymentRetry() {
    return this.getDeploymentRetry;
  }

  public void setGetDeploymentRetry(Retry getDeploymentRetry) {
    this.getDeploymentRetry = getDeploymentRetry;
  }

  public Retry getListRevisionsRetry() {
    return this.listRevisionsRetry;
  }

  public void setListRevisionsRetry(Retry listRevisionsRetry) {
    this.listRevisionsRetry = listRevisionsRetry;
  }

  public Retry getGetRevisionRetry() {
    return this.getRevisionRetry;
  }

  public void setGetRevisionRetry(Retry getRevisionRetry) {
    this.getRevisionRetry = getRevisionRetry;
  }

  public Retry getGetResourceRetry() {
    return this.getResourceRetry;
  }

  public void setGetResourceRetry(Retry getResourceRetry) {
    this.getResourceRetry = getResourceRetry;
  }

  public Retry getListResourcesRetry() {
    return this.listResourcesRetry;
  }

  public void setListResourcesRetry(Retry listResourcesRetry) {
    this.listResourcesRetry = listResourcesRetry;
  }

  public Retry getExportDeploymentStatefileRetry() {
    return this.exportDeploymentStatefileRetry;
  }

  public void setExportDeploymentStatefileRetry(Retry exportDeploymentStatefileRetry) {
    this.exportDeploymentStatefileRetry = exportDeploymentStatefileRetry;
  }

  public Retry getExportRevisionStatefileRetry() {
    return this.exportRevisionStatefileRetry;
  }

  public void setExportRevisionStatefileRetry(Retry exportRevisionStatefileRetry) {
    this.exportRevisionStatefileRetry = exportRevisionStatefileRetry;
  }

  public Retry getImportStatefileRetry() {
    return this.importStatefileRetry;
  }

  public void setImportStatefileRetry(Retry importStatefileRetry) {
    this.importStatefileRetry = importStatefileRetry;
  }

  public Retry getDeleteStatefileRetry() {
    return this.deleteStatefileRetry;
  }

  public void setDeleteStatefileRetry(Retry deleteStatefileRetry) {
    this.deleteStatefileRetry = deleteStatefileRetry;
  }

  public Retry getExportLockInfoRetry() {
    return this.exportLockInfoRetry;
  }

  public void setExportLockInfoRetry(Retry exportLockInfoRetry) {
    this.exportLockInfoRetry = exportLockInfoRetry;
  }

  public Retry getGetPreviewRetry() {
    return this.getPreviewRetry;
  }

  public void setGetPreviewRetry(Retry getPreviewRetry) {
    this.getPreviewRetry = getPreviewRetry;
  }

  public Retry getListPreviewsRetry() {
    return this.listPreviewsRetry;
  }

  public void setListPreviewsRetry(Retry listPreviewsRetry) {
    this.listPreviewsRetry = listPreviewsRetry;
  }

  public Retry getExportPreviewResultRetry() {
    return this.exportPreviewResultRetry;
  }

  public void setExportPreviewResultRetry(Retry exportPreviewResultRetry) {
    this.exportPreviewResultRetry = exportPreviewResultRetry;
  }

  public Retry getListTerraformVersionsRetry() {
    return this.listTerraformVersionsRetry;
  }

  public void setListTerraformVersionsRetry(Retry listTerraformVersionsRetry) {
    this.listTerraformVersionsRetry = listTerraformVersionsRetry;
  }

  public Retry getGetTerraformVersionRetry() {
    return this.getTerraformVersionRetry;
  }

  public void setGetTerraformVersionRetry(Retry getTerraformVersionRetry) {
    this.getTerraformVersionRetry = getTerraformVersionRetry;
  }

  public Retry getListLocationsRetry() {
    return this.listLocationsRetry;
  }

  public void setListLocationsRetry(Retry listLocationsRetry) {
    this.listLocationsRetry = listLocationsRetry;
  }

  public Retry getGetLocationRetry() {
    return this.getLocationRetry;
  }

  public void setGetLocationRetry(Retry getLocationRetry) {
    this.getLocationRetry = getLocationRetry;
  }

  public Retry getSetIamPolicyRetry() {
    return this.setIamPolicyRetry;
  }

  public void setSetIamPolicyRetry(Retry setIamPolicyRetry) {
    this.setIamPolicyRetry = setIamPolicyRetry;
  }

  public Retry getGetIamPolicyRetry() {
    return this.getIamPolicyRetry;
  }

  public void setGetIamPolicyRetry(Retry getIamPolicyRetry) {
    this.getIamPolicyRetry = getIamPolicyRetry;
  }

  public Retry getTestIamPermissionsRetry() {
    return this.testIamPermissionsRetry;
  }

  public void setTestIamPermissionsRetry(Retry testIamPermissionsRetry) {
    this.testIamPermissionsRetry = testIamPermissionsRetry;
  }
}
