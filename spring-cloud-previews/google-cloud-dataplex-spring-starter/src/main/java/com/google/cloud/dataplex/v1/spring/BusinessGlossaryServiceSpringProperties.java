/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.dataplex.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for BusinessGlossaryService client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.dataplex.v1.business-glossary-service")
public class BusinessGlossaryServiceSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of default transport channel provider to use REST instead of gRPC. */
  private boolean useRest = false;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for getGlossary. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getGlossaryRetry;
  /**
   * Allow override of retry settings at method-level for listGlossaries. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listGlossariesRetry;
  /**
   * Allow override of retry settings at method-level for createGlossaryCategory. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createGlossaryCategoryRetry;
  /**
   * Allow override of retry settings at method-level for updateGlossaryCategory. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateGlossaryCategoryRetry;
  /**
   * Allow override of retry settings at method-level for deleteGlossaryCategory. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteGlossaryCategoryRetry;
  /**
   * Allow override of retry settings at method-level for getGlossaryCategory. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getGlossaryCategoryRetry;
  /**
   * Allow override of retry settings at method-level for listGlossaryCategories. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listGlossaryCategoriesRetry;
  /**
   * Allow override of retry settings at method-level for createGlossaryTerm. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createGlossaryTermRetry;
  /**
   * Allow override of retry settings at method-level for updateGlossaryTerm. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateGlossaryTermRetry;
  /**
   * Allow override of retry settings at method-level for deleteGlossaryTerm. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteGlossaryTermRetry;
  /**
   * Allow override of retry settings at method-level for getGlossaryTerm. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getGlossaryTermRetry;
  /**
   * Allow override of retry settings at method-level for listGlossaryTerms. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listGlossaryTermsRetry;
  /**
   * Allow override of retry settings at method-level for listLocations. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listLocationsRetry;
  /**
   * Allow override of retry settings at method-level for getLocation. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getLocationRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getGetGlossaryRetry() {
    return this.getGlossaryRetry;
  }

  public void setGetGlossaryRetry(Retry getGlossaryRetry) {
    this.getGlossaryRetry = getGlossaryRetry;
  }

  public Retry getListGlossariesRetry() {
    return this.listGlossariesRetry;
  }

  public void setListGlossariesRetry(Retry listGlossariesRetry) {
    this.listGlossariesRetry = listGlossariesRetry;
  }

  public Retry getCreateGlossaryCategoryRetry() {
    return this.createGlossaryCategoryRetry;
  }

  public void setCreateGlossaryCategoryRetry(Retry createGlossaryCategoryRetry) {
    this.createGlossaryCategoryRetry = createGlossaryCategoryRetry;
  }

  public Retry getUpdateGlossaryCategoryRetry() {
    return this.updateGlossaryCategoryRetry;
  }

  public void setUpdateGlossaryCategoryRetry(Retry updateGlossaryCategoryRetry) {
    this.updateGlossaryCategoryRetry = updateGlossaryCategoryRetry;
  }

  public Retry getDeleteGlossaryCategoryRetry() {
    return this.deleteGlossaryCategoryRetry;
  }

  public void setDeleteGlossaryCategoryRetry(Retry deleteGlossaryCategoryRetry) {
    this.deleteGlossaryCategoryRetry = deleteGlossaryCategoryRetry;
  }

  public Retry getGetGlossaryCategoryRetry() {
    return this.getGlossaryCategoryRetry;
  }

  public void setGetGlossaryCategoryRetry(Retry getGlossaryCategoryRetry) {
    this.getGlossaryCategoryRetry = getGlossaryCategoryRetry;
  }

  public Retry getListGlossaryCategoriesRetry() {
    return this.listGlossaryCategoriesRetry;
  }

  public void setListGlossaryCategoriesRetry(Retry listGlossaryCategoriesRetry) {
    this.listGlossaryCategoriesRetry = listGlossaryCategoriesRetry;
  }

  public Retry getCreateGlossaryTermRetry() {
    return this.createGlossaryTermRetry;
  }

  public void setCreateGlossaryTermRetry(Retry createGlossaryTermRetry) {
    this.createGlossaryTermRetry = createGlossaryTermRetry;
  }

  public Retry getUpdateGlossaryTermRetry() {
    return this.updateGlossaryTermRetry;
  }

  public void setUpdateGlossaryTermRetry(Retry updateGlossaryTermRetry) {
    this.updateGlossaryTermRetry = updateGlossaryTermRetry;
  }

  public Retry getDeleteGlossaryTermRetry() {
    return this.deleteGlossaryTermRetry;
  }

  public void setDeleteGlossaryTermRetry(Retry deleteGlossaryTermRetry) {
    this.deleteGlossaryTermRetry = deleteGlossaryTermRetry;
  }

  public Retry getGetGlossaryTermRetry() {
    return this.getGlossaryTermRetry;
  }

  public void setGetGlossaryTermRetry(Retry getGlossaryTermRetry) {
    this.getGlossaryTermRetry = getGlossaryTermRetry;
  }

  public Retry getListGlossaryTermsRetry() {
    return this.listGlossaryTermsRetry;
  }

  public void setListGlossaryTermsRetry(Retry listGlossaryTermsRetry) {
    this.listGlossaryTermsRetry = listGlossaryTermsRetry;
  }

  public Retry getListLocationsRetry() {
    return this.listLocationsRetry;
  }

  public void setListLocationsRetry(Retry listLocationsRetry) {
    this.listLocationsRetry = listLocationsRetry;
  }

  public Retry getGetLocationRetry() {
    return this.getLocationRetry;
  }

  public void setGetLocationRetry(Retry getLocationRetry) {
    this.getLocationRetry = getLocationRetry;
  }
}
