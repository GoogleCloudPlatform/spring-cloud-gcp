/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.dataproc.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for AutoscalingPolicyService client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.dataproc.v1.autoscaling-policy-service")
public class AutoscalingPolicyServiceSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of default transport channel provider to use REST instead of gRPC. */
  private boolean useRest = false;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for createAutoscalingPolicy. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createAutoscalingPolicyRetry;
  /**
   * Allow override of retry settings at method-level for updateAutoscalingPolicy. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateAutoscalingPolicyRetry;
  /**
   * Allow override of retry settings at method-level for getAutoscalingPolicy. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getAutoscalingPolicyRetry;
  /**
   * Allow override of retry settings at method-level for listAutoscalingPolicies. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listAutoscalingPoliciesRetry;
  /**
   * Allow override of retry settings at method-level for deleteAutoscalingPolicy. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteAutoscalingPolicyRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getCreateAutoscalingPolicyRetry() {
    return this.createAutoscalingPolicyRetry;
  }

  public void setCreateAutoscalingPolicyRetry(Retry createAutoscalingPolicyRetry) {
    this.createAutoscalingPolicyRetry = createAutoscalingPolicyRetry;
  }

  public Retry getUpdateAutoscalingPolicyRetry() {
    return this.updateAutoscalingPolicyRetry;
  }

  public void setUpdateAutoscalingPolicyRetry(Retry updateAutoscalingPolicyRetry) {
    this.updateAutoscalingPolicyRetry = updateAutoscalingPolicyRetry;
  }

  public Retry getGetAutoscalingPolicyRetry() {
    return this.getAutoscalingPolicyRetry;
  }

  public void setGetAutoscalingPolicyRetry(Retry getAutoscalingPolicyRetry) {
    this.getAutoscalingPolicyRetry = getAutoscalingPolicyRetry;
  }

  public Retry getListAutoscalingPoliciesRetry() {
    return this.listAutoscalingPoliciesRetry;
  }

  public void setListAutoscalingPoliciesRetry(Retry listAutoscalingPoliciesRetry) {
    this.listAutoscalingPoliciesRetry = listAutoscalingPoliciesRetry;
  }

  public Retry getDeleteAutoscalingPolicyRetry() {
    return this.deleteAutoscalingPolicyRetry;
  }

  public void setDeleteAutoscalingPolicyRetry(Retry deleteAutoscalingPolicyRetry) {
    this.deleteAutoscalingPolicyRetry = deleteAutoscalingPolicyRetry;
  }
}
