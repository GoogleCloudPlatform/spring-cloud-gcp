/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.iam.admin.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for IAM client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.iam.admin.v1.i-a-m")
public class IAMSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for listServiceAccounts. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listServiceAccountsRetry;
  /**
   * Allow override of retry settings at method-level for getServiceAccount. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getServiceAccountRetry;
  /**
   * Allow override of retry settings at method-level for createServiceAccount. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createServiceAccountRetry;
  /**
   * Allow override of retry settings at method-level for updateServiceAccount. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateServiceAccountRetry;
  /**
   * Allow override of retry settings at method-level for patchServiceAccount. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry patchServiceAccountRetry;
  /**
   * Allow override of retry settings at method-level for deleteServiceAccount. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteServiceAccountRetry;
  /**
   * Allow override of retry settings at method-level for undeleteServiceAccount. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry undeleteServiceAccountRetry;
  /**
   * Allow override of retry settings at method-level for enableServiceAccount. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry enableServiceAccountRetry;
  /**
   * Allow override of retry settings at method-level for disableServiceAccount. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry disableServiceAccountRetry;
  /**
   * Allow override of retry settings at method-level for listServiceAccountKeys. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listServiceAccountKeysRetry;
  /**
   * Allow override of retry settings at method-level for getServiceAccountKey. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getServiceAccountKeyRetry;
  /**
   * Allow override of retry settings at method-level for createServiceAccountKey. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createServiceAccountKeyRetry;
  /**
   * Allow override of retry settings at method-level for uploadServiceAccountKey. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry uploadServiceAccountKeyRetry;
  /**
   * Allow override of retry settings at method-level for deleteServiceAccountKey. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteServiceAccountKeyRetry;
  /**
   * Allow override of retry settings at method-level for disableServiceAccountKey. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry disableServiceAccountKeyRetry;
  /**
   * Allow override of retry settings at method-level for enableServiceAccountKey. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry enableServiceAccountKeyRetry;
  /**
   * Allow override of retry settings at method-level for signBlob. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry signBlobRetry;
  /**
   * Allow override of retry settings at method-level for signJwt. If defined, this takes precedence
   * over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry signJwtRetry;
  /**
   * Allow override of retry settings at method-level for getIamPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getIamPolicyRetry;
  /**
   * Allow override of retry settings at method-level for setIamPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry setIamPolicyRetry;
  /**
   * Allow override of retry settings at method-level for testIamPermissions. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry testIamPermissionsRetry;
  /**
   * Allow override of retry settings at method-level for queryGrantableRoles. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry queryGrantableRolesRetry;
  /**
   * Allow override of retry settings at method-level for listRoles. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listRolesRetry;
  /**
   * Allow override of retry settings at method-level for getRole. If defined, this takes precedence
   * over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getRoleRetry;
  /**
   * Allow override of retry settings at method-level for createRole. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createRoleRetry;
  /**
   * Allow override of retry settings at method-level for updateRole. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateRoleRetry;
  /**
   * Allow override of retry settings at method-level for deleteRole. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteRoleRetry;
  /**
   * Allow override of retry settings at method-level for undeleteRole. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry undeleteRoleRetry;
  /**
   * Allow override of retry settings at method-level for queryTestablePermissions. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry queryTestablePermissionsRetry;
  /**
   * Allow override of retry settings at method-level for queryAuditableServices. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry queryAuditableServicesRetry;
  /**
   * Allow override of retry settings at method-level for lintPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry lintPolicyRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getListServiceAccountsRetry() {
    return this.listServiceAccountsRetry;
  }

  public void setListServiceAccountsRetry(Retry listServiceAccountsRetry) {
    this.listServiceAccountsRetry = listServiceAccountsRetry;
  }

  public Retry getGetServiceAccountRetry() {
    return this.getServiceAccountRetry;
  }

  public void setGetServiceAccountRetry(Retry getServiceAccountRetry) {
    this.getServiceAccountRetry = getServiceAccountRetry;
  }

  public Retry getCreateServiceAccountRetry() {
    return this.createServiceAccountRetry;
  }

  public void setCreateServiceAccountRetry(Retry createServiceAccountRetry) {
    this.createServiceAccountRetry = createServiceAccountRetry;
  }

  public Retry getUpdateServiceAccountRetry() {
    return this.updateServiceAccountRetry;
  }

  public void setUpdateServiceAccountRetry(Retry updateServiceAccountRetry) {
    this.updateServiceAccountRetry = updateServiceAccountRetry;
  }

  public Retry getPatchServiceAccountRetry() {
    return this.patchServiceAccountRetry;
  }

  public void setPatchServiceAccountRetry(Retry patchServiceAccountRetry) {
    this.patchServiceAccountRetry = patchServiceAccountRetry;
  }

  public Retry getDeleteServiceAccountRetry() {
    return this.deleteServiceAccountRetry;
  }

  public void setDeleteServiceAccountRetry(Retry deleteServiceAccountRetry) {
    this.deleteServiceAccountRetry = deleteServiceAccountRetry;
  }

  public Retry getUndeleteServiceAccountRetry() {
    return this.undeleteServiceAccountRetry;
  }

  public void setUndeleteServiceAccountRetry(Retry undeleteServiceAccountRetry) {
    this.undeleteServiceAccountRetry = undeleteServiceAccountRetry;
  }

  public Retry getEnableServiceAccountRetry() {
    return this.enableServiceAccountRetry;
  }

  public void setEnableServiceAccountRetry(Retry enableServiceAccountRetry) {
    this.enableServiceAccountRetry = enableServiceAccountRetry;
  }

  public Retry getDisableServiceAccountRetry() {
    return this.disableServiceAccountRetry;
  }

  public void setDisableServiceAccountRetry(Retry disableServiceAccountRetry) {
    this.disableServiceAccountRetry = disableServiceAccountRetry;
  }

  public Retry getListServiceAccountKeysRetry() {
    return this.listServiceAccountKeysRetry;
  }

  public void setListServiceAccountKeysRetry(Retry listServiceAccountKeysRetry) {
    this.listServiceAccountKeysRetry = listServiceAccountKeysRetry;
  }

  public Retry getGetServiceAccountKeyRetry() {
    return this.getServiceAccountKeyRetry;
  }

  public void setGetServiceAccountKeyRetry(Retry getServiceAccountKeyRetry) {
    this.getServiceAccountKeyRetry = getServiceAccountKeyRetry;
  }

  public Retry getCreateServiceAccountKeyRetry() {
    return this.createServiceAccountKeyRetry;
  }

  public void setCreateServiceAccountKeyRetry(Retry createServiceAccountKeyRetry) {
    this.createServiceAccountKeyRetry = createServiceAccountKeyRetry;
  }

  public Retry getUploadServiceAccountKeyRetry() {
    return this.uploadServiceAccountKeyRetry;
  }

  public void setUploadServiceAccountKeyRetry(Retry uploadServiceAccountKeyRetry) {
    this.uploadServiceAccountKeyRetry = uploadServiceAccountKeyRetry;
  }

  public Retry getDeleteServiceAccountKeyRetry() {
    return this.deleteServiceAccountKeyRetry;
  }

  public void setDeleteServiceAccountKeyRetry(Retry deleteServiceAccountKeyRetry) {
    this.deleteServiceAccountKeyRetry = deleteServiceAccountKeyRetry;
  }

  public Retry getDisableServiceAccountKeyRetry() {
    return this.disableServiceAccountKeyRetry;
  }

  public void setDisableServiceAccountKeyRetry(Retry disableServiceAccountKeyRetry) {
    this.disableServiceAccountKeyRetry = disableServiceAccountKeyRetry;
  }

  public Retry getEnableServiceAccountKeyRetry() {
    return this.enableServiceAccountKeyRetry;
  }

  public void setEnableServiceAccountKeyRetry(Retry enableServiceAccountKeyRetry) {
    this.enableServiceAccountKeyRetry = enableServiceAccountKeyRetry;
  }

  public Retry getSignBlobRetry() {
    return this.signBlobRetry;
  }

  public void setSignBlobRetry(Retry signBlobRetry) {
    this.signBlobRetry = signBlobRetry;
  }

  public Retry getSignJwtRetry() {
    return this.signJwtRetry;
  }

  public void setSignJwtRetry(Retry signJwtRetry) {
    this.signJwtRetry = signJwtRetry;
  }

  public Retry getGetIamPolicyRetry() {
    return this.getIamPolicyRetry;
  }

  public void setGetIamPolicyRetry(Retry getIamPolicyRetry) {
    this.getIamPolicyRetry = getIamPolicyRetry;
  }

  public Retry getSetIamPolicyRetry() {
    return this.setIamPolicyRetry;
  }

  public void setSetIamPolicyRetry(Retry setIamPolicyRetry) {
    this.setIamPolicyRetry = setIamPolicyRetry;
  }

  public Retry getTestIamPermissionsRetry() {
    return this.testIamPermissionsRetry;
  }

  public void setTestIamPermissionsRetry(Retry testIamPermissionsRetry) {
    this.testIamPermissionsRetry = testIamPermissionsRetry;
  }

  public Retry getQueryGrantableRolesRetry() {
    return this.queryGrantableRolesRetry;
  }

  public void setQueryGrantableRolesRetry(Retry queryGrantableRolesRetry) {
    this.queryGrantableRolesRetry = queryGrantableRolesRetry;
  }

  public Retry getListRolesRetry() {
    return this.listRolesRetry;
  }

  public void setListRolesRetry(Retry listRolesRetry) {
    this.listRolesRetry = listRolesRetry;
  }

  public Retry getGetRoleRetry() {
    return this.getRoleRetry;
  }

  public void setGetRoleRetry(Retry getRoleRetry) {
    this.getRoleRetry = getRoleRetry;
  }

  public Retry getCreateRoleRetry() {
    return this.createRoleRetry;
  }

  public void setCreateRoleRetry(Retry createRoleRetry) {
    this.createRoleRetry = createRoleRetry;
  }

  public Retry getUpdateRoleRetry() {
    return this.updateRoleRetry;
  }

  public void setUpdateRoleRetry(Retry updateRoleRetry) {
    this.updateRoleRetry = updateRoleRetry;
  }

  public Retry getDeleteRoleRetry() {
    return this.deleteRoleRetry;
  }

  public void setDeleteRoleRetry(Retry deleteRoleRetry) {
    this.deleteRoleRetry = deleteRoleRetry;
  }

  public Retry getUndeleteRoleRetry() {
    return this.undeleteRoleRetry;
  }

  public void setUndeleteRoleRetry(Retry undeleteRoleRetry) {
    this.undeleteRoleRetry = undeleteRoleRetry;
  }

  public Retry getQueryTestablePermissionsRetry() {
    return this.queryTestablePermissionsRetry;
  }

  public void setQueryTestablePermissionsRetry(Retry queryTestablePermissionsRetry) {
    this.queryTestablePermissionsRetry = queryTestablePermissionsRetry;
  }

  public Retry getQueryAuditableServicesRetry() {
    return this.queryAuditableServicesRetry;
  }

  public void setQueryAuditableServicesRetry(Retry queryAuditableServicesRetry) {
    this.queryAuditableServicesRetry = queryAuditableServicesRetry;
  }

  public Retry getLintPolicyRetry() {
    return this.lintPolicyRetry;
  }

  public void setLintPolicyRetry(Retry lintPolicyRetry) {
    this.lintPolicyRetry = lintPolicyRetry;
  }
}
