/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.datacatalog.lineage.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for Lineage client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.datacatalog.lineage.v1.lineage")
public class LineageSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of default transport channel provider to use REST instead of gRPC. */
  private boolean useRest = false;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for processOpenLineageRunEvent. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry processOpenLineageRunEventRetry;
  /**
   * Allow override of retry settings at method-level for createProcess. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createProcessRetry;
  /**
   * Allow override of retry settings at method-level for updateProcess. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateProcessRetry;
  /**
   * Allow override of retry settings at method-level for getProcess. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getProcessRetry;
  /**
   * Allow override of retry settings at method-level for listProcesses. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listProcessesRetry;
  /**
   * Allow override of retry settings at method-level for createRun. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createRunRetry;
  /**
   * Allow override of retry settings at method-level for updateRun. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateRunRetry;
  /**
   * Allow override of retry settings at method-level for getRun. If defined, this takes precedence
   * over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getRunRetry;
  /**
   * Allow override of retry settings at method-level for listRuns. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listRunsRetry;
  /**
   * Allow override of retry settings at method-level for createLineageEvent. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createLineageEventRetry;
  /**
   * Allow override of retry settings at method-level for getLineageEvent. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getLineageEventRetry;
  /**
   * Allow override of retry settings at method-level for listLineageEvents. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listLineageEventsRetry;
  /**
   * Allow override of retry settings at method-level for deleteLineageEvent. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteLineageEventRetry;
  /**
   * Allow override of retry settings at method-level for searchLinks. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry searchLinksRetry;
  /**
   * Allow override of retry settings at method-level for batchSearchLinkProcesses. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry batchSearchLinkProcessesRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getProcessOpenLineageRunEventRetry() {
    return this.processOpenLineageRunEventRetry;
  }

  public void setProcessOpenLineageRunEventRetry(Retry processOpenLineageRunEventRetry) {
    this.processOpenLineageRunEventRetry = processOpenLineageRunEventRetry;
  }

  public Retry getCreateProcessRetry() {
    return this.createProcessRetry;
  }

  public void setCreateProcessRetry(Retry createProcessRetry) {
    this.createProcessRetry = createProcessRetry;
  }

  public Retry getUpdateProcessRetry() {
    return this.updateProcessRetry;
  }

  public void setUpdateProcessRetry(Retry updateProcessRetry) {
    this.updateProcessRetry = updateProcessRetry;
  }

  public Retry getGetProcessRetry() {
    return this.getProcessRetry;
  }

  public void setGetProcessRetry(Retry getProcessRetry) {
    this.getProcessRetry = getProcessRetry;
  }

  public Retry getListProcessesRetry() {
    return this.listProcessesRetry;
  }

  public void setListProcessesRetry(Retry listProcessesRetry) {
    this.listProcessesRetry = listProcessesRetry;
  }

  public Retry getCreateRunRetry() {
    return this.createRunRetry;
  }

  public void setCreateRunRetry(Retry createRunRetry) {
    this.createRunRetry = createRunRetry;
  }

  public Retry getUpdateRunRetry() {
    return this.updateRunRetry;
  }

  public void setUpdateRunRetry(Retry updateRunRetry) {
    this.updateRunRetry = updateRunRetry;
  }

  public Retry getGetRunRetry() {
    return this.getRunRetry;
  }

  public void setGetRunRetry(Retry getRunRetry) {
    this.getRunRetry = getRunRetry;
  }

  public Retry getListRunsRetry() {
    return this.listRunsRetry;
  }

  public void setListRunsRetry(Retry listRunsRetry) {
    this.listRunsRetry = listRunsRetry;
  }

  public Retry getCreateLineageEventRetry() {
    return this.createLineageEventRetry;
  }

  public void setCreateLineageEventRetry(Retry createLineageEventRetry) {
    this.createLineageEventRetry = createLineageEventRetry;
  }

  public Retry getGetLineageEventRetry() {
    return this.getLineageEventRetry;
  }

  public void setGetLineageEventRetry(Retry getLineageEventRetry) {
    this.getLineageEventRetry = getLineageEventRetry;
  }

  public Retry getListLineageEventsRetry() {
    return this.listLineageEventsRetry;
  }

  public void setListLineageEventsRetry(Retry listLineageEventsRetry) {
    this.listLineageEventsRetry = listLineageEventsRetry;
  }

  public Retry getDeleteLineageEventRetry() {
    return this.deleteLineageEventRetry;
  }

  public void setDeleteLineageEventRetry(Retry deleteLineageEventRetry) {
    this.deleteLineageEventRetry = deleteLineageEventRetry;
  }

  public Retry getSearchLinksRetry() {
    return this.searchLinksRetry;
  }

  public void setSearchLinksRetry(Retry searchLinksRetry) {
    this.searchLinksRetry = searchLinksRetry;
  }

  public Retry getBatchSearchLinkProcessesRetry() {
    return this.batchSearchLinkProcessesRetry;
  }

  public void setBatchSearchLinkProcessesRetry(Retry batchSearchLinkProcessesRetry) {
    this.batchSearchLinkProcessesRetry = batchSearchLinkProcessesRetry;
  }
}
