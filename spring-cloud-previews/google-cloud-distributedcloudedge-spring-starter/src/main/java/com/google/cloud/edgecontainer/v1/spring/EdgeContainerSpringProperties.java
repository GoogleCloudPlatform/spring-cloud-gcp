/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.edgecontainer.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for EdgeContainer client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.edgecontainer.v1.edge-container")
public class EdgeContainerSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of default transport channel provider to use REST instead of gRPC. */
  private boolean useRest = false;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for listClusters. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listClustersRetry;
  /**
   * Allow override of retry settings at method-level for getCluster. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getClusterRetry;
  /**
   * Allow override of retry settings at method-level for generateAccessToken. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry generateAccessTokenRetry;
  /**
   * Allow override of retry settings at method-level for generateOfflineCredential. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry generateOfflineCredentialRetry;
  /**
   * Allow override of retry settings at method-level for listNodePools. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listNodePoolsRetry;
  /**
   * Allow override of retry settings at method-level for getNodePool. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getNodePoolRetry;
  /**
   * Allow override of retry settings at method-level for listMachines. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listMachinesRetry;
  /**
   * Allow override of retry settings at method-level for getMachine. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getMachineRetry;
  /**
   * Allow override of retry settings at method-level for listVpnConnections. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listVpnConnectionsRetry;
  /**
   * Allow override of retry settings at method-level for getVpnConnection. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getVpnConnectionRetry;
  /**
   * Allow override of retry settings at method-level for getServerConfig. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getServerConfigRetry;
  /**
   * Allow override of retry settings at method-level for listLocations. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listLocationsRetry;
  /**
   * Allow override of retry settings at method-level for getLocation. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getLocationRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getListClustersRetry() {
    return this.listClustersRetry;
  }

  public void setListClustersRetry(Retry listClustersRetry) {
    this.listClustersRetry = listClustersRetry;
  }

  public Retry getGetClusterRetry() {
    return this.getClusterRetry;
  }

  public void setGetClusterRetry(Retry getClusterRetry) {
    this.getClusterRetry = getClusterRetry;
  }

  public Retry getGenerateAccessTokenRetry() {
    return this.generateAccessTokenRetry;
  }

  public void setGenerateAccessTokenRetry(Retry generateAccessTokenRetry) {
    this.generateAccessTokenRetry = generateAccessTokenRetry;
  }

  public Retry getGenerateOfflineCredentialRetry() {
    return this.generateOfflineCredentialRetry;
  }

  public void setGenerateOfflineCredentialRetry(Retry generateOfflineCredentialRetry) {
    this.generateOfflineCredentialRetry = generateOfflineCredentialRetry;
  }

  public Retry getListNodePoolsRetry() {
    return this.listNodePoolsRetry;
  }

  public void setListNodePoolsRetry(Retry listNodePoolsRetry) {
    this.listNodePoolsRetry = listNodePoolsRetry;
  }

  public Retry getGetNodePoolRetry() {
    return this.getNodePoolRetry;
  }

  public void setGetNodePoolRetry(Retry getNodePoolRetry) {
    this.getNodePoolRetry = getNodePoolRetry;
  }

  public Retry getListMachinesRetry() {
    return this.listMachinesRetry;
  }

  public void setListMachinesRetry(Retry listMachinesRetry) {
    this.listMachinesRetry = listMachinesRetry;
  }

  public Retry getGetMachineRetry() {
    return this.getMachineRetry;
  }

  public void setGetMachineRetry(Retry getMachineRetry) {
    this.getMachineRetry = getMachineRetry;
  }

  public Retry getListVpnConnectionsRetry() {
    return this.listVpnConnectionsRetry;
  }

  public void setListVpnConnectionsRetry(Retry listVpnConnectionsRetry) {
    this.listVpnConnectionsRetry = listVpnConnectionsRetry;
  }

  public Retry getGetVpnConnectionRetry() {
    return this.getVpnConnectionRetry;
  }

  public void setGetVpnConnectionRetry(Retry getVpnConnectionRetry) {
    this.getVpnConnectionRetry = getVpnConnectionRetry;
  }

  public Retry getGetServerConfigRetry() {
    return this.getServerConfigRetry;
  }

  public void setGetServerConfigRetry(Retry getServerConfigRetry) {
    this.getServerConfigRetry = getServerConfigRetry;
  }

  public Retry getListLocationsRetry() {
    return this.listLocationsRetry;
  }

  public void setListLocationsRetry(Retry listLocationsRetry) {
    this.listLocationsRetry = listLocationsRetry;
  }

  public Retry getGetLocationRetry() {
    return this.getLocationRetry;
  }

  public void setGetLocationRetry(Retry getLocationRetry) {
    this.getLocationRetry = getLocationRetry;
  }
}
