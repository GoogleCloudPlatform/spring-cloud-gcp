/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.iap.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for IdentityAwareProxyOAuthService client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.iap.v1.identity-aware-proxy-o-auth-service")
public class IdentityAwareProxyOAuthServiceSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of default transport channel provider to use REST instead of gRPC. */
  private boolean useRest = false;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for listBrands. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listBrandsRetry;
  /**
   * Allow override of retry settings at method-level for createBrand. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createBrandRetry;
  /**
   * Allow override of retry settings at method-level for getBrand. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getBrandRetry;
  /**
   * Allow override of retry settings at method-level for createIdentityAwareProxyClient. If
   * defined, this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createIdentityAwareProxyClientRetry;
  /**
   * Allow override of retry settings at method-level for listIdentityAwareProxyClients. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listIdentityAwareProxyClientsRetry;
  /**
   * Allow override of retry settings at method-level for getIdentityAwareProxyClient. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getIdentityAwareProxyClientRetry;
  /**
   * Allow override of retry settings at method-level for resetIdentityAwareProxyClientSecret. If
   * defined, this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry resetIdentityAwareProxyClientSecretRetry;
  /**
   * Allow override of retry settings at method-level for deleteIdentityAwareProxyClient. If
   * defined, this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteIdentityAwareProxyClientRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getListBrandsRetry() {
    return this.listBrandsRetry;
  }

  public void setListBrandsRetry(Retry listBrandsRetry) {
    this.listBrandsRetry = listBrandsRetry;
  }

  public Retry getCreateBrandRetry() {
    return this.createBrandRetry;
  }

  public void setCreateBrandRetry(Retry createBrandRetry) {
    this.createBrandRetry = createBrandRetry;
  }

  public Retry getGetBrandRetry() {
    return this.getBrandRetry;
  }

  public void setGetBrandRetry(Retry getBrandRetry) {
    this.getBrandRetry = getBrandRetry;
  }

  public Retry getCreateIdentityAwareProxyClientRetry() {
    return this.createIdentityAwareProxyClientRetry;
  }

  public void setCreateIdentityAwareProxyClientRetry(Retry createIdentityAwareProxyClientRetry) {
    this.createIdentityAwareProxyClientRetry = createIdentityAwareProxyClientRetry;
  }

  public Retry getListIdentityAwareProxyClientsRetry() {
    return this.listIdentityAwareProxyClientsRetry;
  }

  public void setListIdentityAwareProxyClientsRetry(Retry listIdentityAwareProxyClientsRetry) {
    this.listIdentityAwareProxyClientsRetry = listIdentityAwareProxyClientsRetry;
  }

  public Retry getGetIdentityAwareProxyClientRetry() {
    return this.getIdentityAwareProxyClientRetry;
  }

  public void setGetIdentityAwareProxyClientRetry(Retry getIdentityAwareProxyClientRetry) {
    this.getIdentityAwareProxyClientRetry = getIdentityAwareProxyClientRetry;
  }

  public Retry getResetIdentityAwareProxyClientSecretRetry() {
    return this.resetIdentityAwareProxyClientSecretRetry;
  }

  public void setResetIdentityAwareProxyClientSecretRetry(
      Retry resetIdentityAwareProxyClientSecretRetry) {
    this.resetIdentityAwareProxyClientSecretRetry = resetIdentityAwareProxyClientSecretRetry;
  }

  public Retry getDeleteIdentityAwareProxyClientRetry() {
    return this.deleteIdentityAwareProxyClientRetry;
  }

  public void setDeleteIdentityAwareProxyClientRetry(Retry deleteIdentityAwareProxyClientRetry) {
    this.deleteIdentityAwareProxyClientRetry = deleteIdentityAwareProxyClientRetry;
  }
}
