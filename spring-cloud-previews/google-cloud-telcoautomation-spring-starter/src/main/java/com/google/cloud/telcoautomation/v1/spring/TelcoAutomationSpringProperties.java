/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.telcoautomation.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for TelcoAutomation client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.telcoautomation.v1.telco-automation")
public class TelcoAutomationSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of default transport channel provider to use REST instead of gRPC. */
  private boolean useRest = false;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for listOrchestrationClusters. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listOrchestrationClustersRetry;
  /**
   * Allow override of retry settings at method-level for getOrchestrationCluster. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getOrchestrationClusterRetry;
  /**
   * Allow override of retry settings at method-level for listEdgeSlms. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listEdgeSlmsRetry;
  /**
   * Allow override of retry settings at method-level for getEdgeSlm. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getEdgeSlmRetry;
  /**
   * Allow override of retry settings at method-level for createBlueprint. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createBlueprintRetry;
  /**
   * Allow override of retry settings at method-level for updateBlueprint. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateBlueprintRetry;
  /**
   * Allow override of retry settings at method-level for getBlueprint. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getBlueprintRetry;
  /**
   * Allow override of retry settings at method-level for deleteBlueprint. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteBlueprintRetry;
  /**
   * Allow override of retry settings at method-level for listBlueprints. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listBlueprintsRetry;
  /**
   * Allow override of retry settings at method-level for approveBlueprint. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry approveBlueprintRetry;
  /**
   * Allow override of retry settings at method-level for proposeBlueprint. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry proposeBlueprintRetry;
  /**
   * Allow override of retry settings at method-level for rejectBlueprint. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry rejectBlueprintRetry;
  /**
   * Allow override of retry settings at method-level for listBlueprintRevisions. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listBlueprintRevisionsRetry;
  /**
   * Allow override of retry settings at method-level for searchBlueprintRevisions. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry searchBlueprintRevisionsRetry;
  /**
   * Allow override of retry settings at method-level for searchDeploymentRevisions. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry searchDeploymentRevisionsRetry;
  /**
   * Allow override of retry settings at method-level for discardBlueprintChanges. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry discardBlueprintChangesRetry;
  /**
   * Allow override of retry settings at method-level for listPublicBlueprints. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listPublicBlueprintsRetry;
  /**
   * Allow override of retry settings at method-level for getPublicBlueprint. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getPublicBlueprintRetry;
  /**
   * Allow override of retry settings at method-level for createDeployment. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createDeploymentRetry;
  /**
   * Allow override of retry settings at method-level for updateDeployment. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateDeploymentRetry;
  /**
   * Allow override of retry settings at method-level for getDeployment. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getDeploymentRetry;
  /**
   * Allow override of retry settings at method-level for removeDeployment. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry removeDeploymentRetry;
  /**
   * Allow override of retry settings at method-level for listDeployments. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listDeploymentsRetry;
  /**
   * Allow override of retry settings at method-level for listDeploymentRevisions. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listDeploymentRevisionsRetry;
  /**
   * Allow override of retry settings at method-level for discardDeploymentChanges. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry discardDeploymentChangesRetry;
  /**
   * Allow override of retry settings at method-level for applyDeployment. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry applyDeploymentRetry;
  /**
   * Allow override of retry settings at method-level for computeDeploymentStatus. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry computeDeploymentStatusRetry;
  /**
   * Allow override of retry settings at method-level for rollbackDeployment. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry rollbackDeploymentRetry;
  /**
   * Allow override of retry settings at method-level for getHydratedDeployment. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getHydratedDeploymentRetry;
  /**
   * Allow override of retry settings at method-level for listHydratedDeployments. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listHydratedDeploymentsRetry;
  /**
   * Allow override of retry settings at method-level for updateHydratedDeployment. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateHydratedDeploymentRetry;
  /**
   * Allow override of retry settings at method-level for applyHydratedDeployment. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry applyHydratedDeploymentRetry;
  /**
   * Allow override of retry settings at method-level for listLocations. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listLocationsRetry;
  /**
   * Allow override of retry settings at method-level for getLocation. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getLocationRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getListOrchestrationClustersRetry() {
    return this.listOrchestrationClustersRetry;
  }

  public void setListOrchestrationClustersRetry(Retry listOrchestrationClustersRetry) {
    this.listOrchestrationClustersRetry = listOrchestrationClustersRetry;
  }

  public Retry getGetOrchestrationClusterRetry() {
    return this.getOrchestrationClusterRetry;
  }

  public void setGetOrchestrationClusterRetry(Retry getOrchestrationClusterRetry) {
    this.getOrchestrationClusterRetry = getOrchestrationClusterRetry;
  }

  public Retry getListEdgeSlmsRetry() {
    return this.listEdgeSlmsRetry;
  }

  public void setListEdgeSlmsRetry(Retry listEdgeSlmsRetry) {
    this.listEdgeSlmsRetry = listEdgeSlmsRetry;
  }

  public Retry getGetEdgeSlmRetry() {
    return this.getEdgeSlmRetry;
  }

  public void setGetEdgeSlmRetry(Retry getEdgeSlmRetry) {
    this.getEdgeSlmRetry = getEdgeSlmRetry;
  }

  public Retry getCreateBlueprintRetry() {
    return this.createBlueprintRetry;
  }

  public void setCreateBlueprintRetry(Retry createBlueprintRetry) {
    this.createBlueprintRetry = createBlueprintRetry;
  }

  public Retry getUpdateBlueprintRetry() {
    return this.updateBlueprintRetry;
  }

  public void setUpdateBlueprintRetry(Retry updateBlueprintRetry) {
    this.updateBlueprintRetry = updateBlueprintRetry;
  }

  public Retry getGetBlueprintRetry() {
    return this.getBlueprintRetry;
  }

  public void setGetBlueprintRetry(Retry getBlueprintRetry) {
    this.getBlueprintRetry = getBlueprintRetry;
  }

  public Retry getDeleteBlueprintRetry() {
    return this.deleteBlueprintRetry;
  }

  public void setDeleteBlueprintRetry(Retry deleteBlueprintRetry) {
    this.deleteBlueprintRetry = deleteBlueprintRetry;
  }

  public Retry getListBlueprintsRetry() {
    return this.listBlueprintsRetry;
  }

  public void setListBlueprintsRetry(Retry listBlueprintsRetry) {
    this.listBlueprintsRetry = listBlueprintsRetry;
  }

  public Retry getApproveBlueprintRetry() {
    return this.approveBlueprintRetry;
  }

  public void setApproveBlueprintRetry(Retry approveBlueprintRetry) {
    this.approveBlueprintRetry = approveBlueprintRetry;
  }

  public Retry getProposeBlueprintRetry() {
    return this.proposeBlueprintRetry;
  }

  public void setProposeBlueprintRetry(Retry proposeBlueprintRetry) {
    this.proposeBlueprintRetry = proposeBlueprintRetry;
  }

  public Retry getRejectBlueprintRetry() {
    return this.rejectBlueprintRetry;
  }

  public void setRejectBlueprintRetry(Retry rejectBlueprintRetry) {
    this.rejectBlueprintRetry = rejectBlueprintRetry;
  }

  public Retry getListBlueprintRevisionsRetry() {
    return this.listBlueprintRevisionsRetry;
  }

  public void setListBlueprintRevisionsRetry(Retry listBlueprintRevisionsRetry) {
    this.listBlueprintRevisionsRetry = listBlueprintRevisionsRetry;
  }

  public Retry getSearchBlueprintRevisionsRetry() {
    return this.searchBlueprintRevisionsRetry;
  }

  public void setSearchBlueprintRevisionsRetry(Retry searchBlueprintRevisionsRetry) {
    this.searchBlueprintRevisionsRetry = searchBlueprintRevisionsRetry;
  }

  public Retry getSearchDeploymentRevisionsRetry() {
    return this.searchDeploymentRevisionsRetry;
  }

  public void setSearchDeploymentRevisionsRetry(Retry searchDeploymentRevisionsRetry) {
    this.searchDeploymentRevisionsRetry = searchDeploymentRevisionsRetry;
  }

  public Retry getDiscardBlueprintChangesRetry() {
    return this.discardBlueprintChangesRetry;
  }

  public void setDiscardBlueprintChangesRetry(Retry discardBlueprintChangesRetry) {
    this.discardBlueprintChangesRetry = discardBlueprintChangesRetry;
  }

  public Retry getListPublicBlueprintsRetry() {
    return this.listPublicBlueprintsRetry;
  }

  public void setListPublicBlueprintsRetry(Retry listPublicBlueprintsRetry) {
    this.listPublicBlueprintsRetry = listPublicBlueprintsRetry;
  }

  public Retry getGetPublicBlueprintRetry() {
    return this.getPublicBlueprintRetry;
  }

  public void setGetPublicBlueprintRetry(Retry getPublicBlueprintRetry) {
    this.getPublicBlueprintRetry = getPublicBlueprintRetry;
  }

  public Retry getCreateDeploymentRetry() {
    return this.createDeploymentRetry;
  }

  public void setCreateDeploymentRetry(Retry createDeploymentRetry) {
    this.createDeploymentRetry = createDeploymentRetry;
  }

  public Retry getUpdateDeploymentRetry() {
    return this.updateDeploymentRetry;
  }

  public void setUpdateDeploymentRetry(Retry updateDeploymentRetry) {
    this.updateDeploymentRetry = updateDeploymentRetry;
  }

  public Retry getGetDeploymentRetry() {
    return this.getDeploymentRetry;
  }

  public void setGetDeploymentRetry(Retry getDeploymentRetry) {
    this.getDeploymentRetry = getDeploymentRetry;
  }

  public Retry getRemoveDeploymentRetry() {
    return this.removeDeploymentRetry;
  }

  public void setRemoveDeploymentRetry(Retry removeDeploymentRetry) {
    this.removeDeploymentRetry = removeDeploymentRetry;
  }

  public Retry getListDeploymentsRetry() {
    return this.listDeploymentsRetry;
  }

  public void setListDeploymentsRetry(Retry listDeploymentsRetry) {
    this.listDeploymentsRetry = listDeploymentsRetry;
  }

  public Retry getListDeploymentRevisionsRetry() {
    return this.listDeploymentRevisionsRetry;
  }

  public void setListDeploymentRevisionsRetry(Retry listDeploymentRevisionsRetry) {
    this.listDeploymentRevisionsRetry = listDeploymentRevisionsRetry;
  }

  public Retry getDiscardDeploymentChangesRetry() {
    return this.discardDeploymentChangesRetry;
  }

  public void setDiscardDeploymentChangesRetry(Retry discardDeploymentChangesRetry) {
    this.discardDeploymentChangesRetry = discardDeploymentChangesRetry;
  }

  public Retry getApplyDeploymentRetry() {
    return this.applyDeploymentRetry;
  }

  public void setApplyDeploymentRetry(Retry applyDeploymentRetry) {
    this.applyDeploymentRetry = applyDeploymentRetry;
  }

  public Retry getComputeDeploymentStatusRetry() {
    return this.computeDeploymentStatusRetry;
  }

  public void setComputeDeploymentStatusRetry(Retry computeDeploymentStatusRetry) {
    this.computeDeploymentStatusRetry = computeDeploymentStatusRetry;
  }

  public Retry getRollbackDeploymentRetry() {
    return this.rollbackDeploymentRetry;
  }

  public void setRollbackDeploymentRetry(Retry rollbackDeploymentRetry) {
    this.rollbackDeploymentRetry = rollbackDeploymentRetry;
  }

  public Retry getGetHydratedDeploymentRetry() {
    return this.getHydratedDeploymentRetry;
  }

  public void setGetHydratedDeploymentRetry(Retry getHydratedDeploymentRetry) {
    this.getHydratedDeploymentRetry = getHydratedDeploymentRetry;
  }

  public Retry getListHydratedDeploymentsRetry() {
    return this.listHydratedDeploymentsRetry;
  }

  public void setListHydratedDeploymentsRetry(Retry listHydratedDeploymentsRetry) {
    this.listHydratedDeploymentsRetry = listHydratedDeploymentsRetry;
  }

  public Retry getUpdateHydratedDeploymentRetry() {
    return this.updateHydratedDeploymentRetry;
  }

  public void setUpdateHydratedDeploymentRetry(Retry updateHydratedDeploymentRetry) {
    this.updateHydratedDeploymentRetry = updateHydratedDeploymentRetry;
  }

  public Retry getApplyHydratedDeploymentRetry() {
    return this.applyHydratedDeploymentRetry;
  }

  public void setApplyHydratedDeploymentRetry(Retry applyHydratedDeploymentRetry) {
    this.applyHydratedDeploymentRetry = applyHydratedDeploymentRetry;
  }

  public Retry getListLocationsRetry() {
    return this.listLocationsRetry;
  }

  public void setListLocationsRetry(Retry listLocationsRetry) {
    this.listLocationsRetry = listLocationsRetry;
  }

  public Retry getGetLocationRetry() {
    return this.getLocationRetry;
  }

  public void setGetLocationRetry(Retry getLocationRetry) {
    this.getLocationRetry = getLocationRetry;
  }
}
