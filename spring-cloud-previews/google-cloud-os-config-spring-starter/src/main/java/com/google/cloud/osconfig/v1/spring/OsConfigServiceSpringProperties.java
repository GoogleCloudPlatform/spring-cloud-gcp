/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.osconfig.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for OsConfigService client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.osconfig.v1.os-config-service")
public class OsConfigServiceSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of default transport channel provider to use REST instead of gRPC. */
  private boolean useRest = false;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for executePatchJob. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry executePatchJobRetry;
  /**
   * Allow override of retry settings at method-level for getPatchJob. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getPatchJobRetry;
  /**
   * Allow override of retry settings at method-level for cancelPatchJob. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry cancelPatchJobRetry;
  /**
   * Allow override of retry settings at method-level for listPatchJobs. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listPatchJobsRetry;
  /**
   * Allow override of retry settings at method-level for listPatchJobInstanceDetails. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listPatchJobInstanceDetailsRetry;
  /**
   * Allow override of retry settings at method-level for createPatchDeployment. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createPatchDeploymentRetry;
  /**
   * Allow override of retry settings at method-level for getPatchDeployment. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getPatchDeploymentRetry;
  /**
   * Allow override of retry settings at method-level for listPatchDeployments. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listPatchDeploymentsRetry;
  /**
   * Allow override of retry settings at method-level for deletePatchDeployment. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deletePatchDeploymentRetry;
  /**
   * Allow override of retry settings at method-level for updatePatchDeployment. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updatePatchDeploymentRetry;
  /**
   * Allow override of retry settings at method-level for pausePatchDeployment. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry pausePatchDeploymentRetry;
  /**
   * Allow override of retry settings at method-level for resumePatchDeployment. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry resumePatchDeploymentRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getExecutePatchJobRetry() {
    return this.executePatchJobRetry;
  }

  public void setExecutePatchJobRetry(Retry executePatchJobRetry) {
    this.executePatchJobRetry = executePatchJobRetry;
  }

  public Retry getGetPatchJobRetry() {
    return this.getPatchJobRetry;
  }

  public void setGetPatchJobRetry(Retry getPatchJobRetry) {
    this.getPatchJobRetry = getPatchJobRetry;
  }

  public Retry getCancelPatchJobRetry() {
    return this.cancelPatchJobRetry;
  }

  public void setCancelPatchJobRetry(Retry cancelPatchJobRetry) {
    this.cancelPatchJobRetry = cancelPatchJobRetry;
  }

  public Retry getListPatchJobsRetry() {
    return this.listPatchJobsRetry;
  }

  public void setListPatchJobsRetry(Retry listPatchJobsRetry) {
    this.listPatchJobsRetry = listPatchJobsRetry;
  }

  public Retry getListPatchJobInstanceDetailsRetry() {
    return this.listPatchJobInstanceDetailsRetry;
  }

  public void setListPatchJobInstanceDetailsRetry(Retry listPatchJobInstanceDetailsRetry) {
    this.listPatchJobInstanceDetailsRetry = listPatchJobInstanceDetailsRetry;
  }

  public Retry getCreatePatchDeploymentRetry() {
    return this.createPatchDeploymentRetry;
  }

  public void setCreatePatchDeploymentRetry(Retry createPatchDeploymentRetry) {
    this.createPatchDeploymentRetry = createPatchDeploymentRetry;
  }

  public Retry getGetPatchDeploymentRetry() {
    return this.getPatchDeploymentRetry;
  }

  public void setGetPatchDeploymentRetry(Retry getPatchDeploymentRetry) {
    this.getPatchDeploymentRetry = getPatchDeploymentRetry;
  }

  public Retry getListPatchDeploymentsRetry() {
    return this.listPatchDeploymentsRetry;
  }

  public void setListPatchDeploymentsRetry(Retry listPatchDeploymentsRetry) {
    this.listPatchDeploymentsRetry = listPatchDeploymentsRetry;
  }

  public Retry getDeletePatchDeploymentRetry() {
    return this.deletePatchDeploymentRetry;
  }

  public void setDeletePatchDeploymentRetry(Retry deletePatchDeploymentRetry) {
    this.deletePatchDeploymentRetry = deletePatchDeploymentRetry;
  }

  public Retry getUpdatePatchDeploymentRetry() {
    return this.updatePatchDeploymentRetry;
  }

  public void setUpdatePatchDeploymentRetry(Retry updatePatchDeploymentRetry) {
    this.updatePatchDeploymentRetry = updatePatchDeploymentRetry;
  }

  public Retry getPausePatchDeploymentRetry() {
    return this.pausePatchDeploymentRetry;
  }

  public void setPausePatchDeploymentRetry(Retry pausePatchDeploymentRetry) {
    this.pausePatchDeploymentRetry = pausePatchDeploymentRetry;
  }

  public Retry getResumePatchDeploymentRetry() {
    return this.resumePatchDeploymentRetry;
  }

  public void setResumePatchDeploymentRetry(Retry resumePatchDeploymentRetry) {
    this.resumePatchDeploymentRetry = resumePatchDeploymentRetry;
  }
}
