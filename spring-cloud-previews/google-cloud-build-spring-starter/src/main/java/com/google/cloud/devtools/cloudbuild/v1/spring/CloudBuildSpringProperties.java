/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.devtools.cloudbuild.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for CloudBuild client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.devtools.cloudbuild.v1.cloud-build")
public class CloudBuildSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of default transport channel provider to use REST instead of gRPC. */
  private boolean useRest = false;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for getBuild. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getBuildRetry;
  /**
   * Allow override of retry settings at method-level for listBuilds. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listBuildsRetry;
  /**
   * Allow override of retry settings at method-level for cancelBuild. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry cancelBuildRetry;
  /**
   * Allow override of retry settings at method-level for createBuildTrigger. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createBuildTriggerRetry;
  /**
   * Allow override of retry settings at method-level for getBuildTrigger. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getBuildTriggerRetry;
  /**
   * Allow override of retry settings at method-level for listBuildTriggers. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listBuildTriggersRetry;
  /**
   * Allow override of retry settings at method-level for deleteBuildTrigger. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteBuildTriggerRetry;
  /**
   * Allow override of retry settings at method-level for updateBuildTrigger. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateBuildTriggerRetry;
  /**
   * Allow override of retry settings at method-level for receiveTriggerWebhook. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry receiveTriggerWebhookRetry;
  /**
   * Allow override of retry settings at method-level for getWorkerPool. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getWorkerPoolRetry;
  /**
   * Allow override of retry settings at method-level for listWorkerPools. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listWorkerPoolsRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getGetBuildRetry() {
    return this.getBuildRetry;
  }

  public void setGetBuildRetry(Retry getBuildRetry) {
    this.getBuildRetry = getBuildRetry;
  }

  public Retry getListBuildsRetry() {
    return this.listBuildsRetry;
  }

  public void setListBuildsRetry(Retry listBuildsRetry) {
    this.listBuildsRetry = listBuildsRetry;
  }

  public Retry getCancelBuildRetry() {
    return this.cancelBuildRetry;
  }

  public void setCancelBuildRetry(Retry cancelBuildRetry) {
    this.cancelBuildRetry = cancelBuildRetry;
  }

  public Retry getCreateBuildTriggerRetry() {
    return this.createBuildTriggerRetry;
  }

  public void setCreateBuildTriggerRetry(Retry createBuildTriggerRetry) {
    this.createBuildTriggerRetry = createBuildTriggerRetry;
  }

  public Retry getGetBuildTriggerRetry() {
    return this.getBuildTriggerRetry;
  }

  public void setGetBuildTriggerRetry(Retry getBuildTriggerRetry) {
    this.getBuildTriggerRetry = getBuildTriggerRetry;
  }

  public Retry getListBuildTriggersRetry() {
    return this.listBuildTriggersRetry;
  }

  public void setListBuildTriggersRetry(Retry listBuildTriggersRetry) {
    this.listBuildTriggersRetry = listBuildTriggersRetry;
  }

  public Retry getDeleteBuildTriggerRetry() {
    return this.deleteBuildTriggerRetry;
  }

  public void setDeleteBuildTriggerRetry(Retry deleteBuildTriggerRetry) {
    this.deleteBuildTriggerRetry = deleteBuildTriggerRetry;
  }

  public Retry getUpdateBuildTriggerRetry() {
    return this.updateBuildTriggerRetry;
  }

  public void setUpdateBuildTriggerRetry(Retry updateBuildTriggerRetry) {
    this.updateBuildTriggerRetry = updateBuildTriggerRetry;
  }

  public Retry getReceiveTriggerWebhookRetry() {
    return this.receiveTriggerWebhookRetry;
  }

  public void setReceiveTriggerWebhookRetry(Retry receiveTriggerWebhookRetry) {
    this.receiveTriggerWebhookRetry = receiveTriggerWebhookRetry;
  }

  public Retry getGetWorkerPoolRetry() {
    return this.getWorkerPoolRetry;
  }

  public void setGetWorkerPoolRetry(Retry getWorkerPoolRetry) {
    this.getWorkerPoolRetry = getWorkerPoolRetry;
  }

  public Retry getListWorkerPoolsRetry() {
    return this.listWorkerPoolsRetry;
  }

  public void setListWorkerPoolsRetry(Retry listWorkerPoolsRetry) {
    this.listWorkerPoolsRetry = listWorkerPoolsRetry;
  }
}
