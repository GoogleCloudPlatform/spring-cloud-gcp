/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.asset.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for AssetService client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.asset.v1.asset-service")
public class AssetServiceSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of default transport channel provider to use REST instead of gRPC. */
  private boolean useRest = false;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for listAssets. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listAssetsRetry;
  /**
   * Allow override of retry settings at method-level for batchGetAssetsHistory. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry batchGetAssetsHistoryRetry;
  /**
   * Allow override of retry settings at method-level for createFeed. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createFeedRetry;
  /**
   * Allow override of retry settings at method-level for getFeed. If defined, this takes precedence
   * over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getFeedRetry;
  /**
   * Allow override of retry settings at method-level for listFeeds. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listFeedsRetry;
  /**
   * Allow override of retry settings at method-level for updateFeed. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateFeedRetry;
  /**
   * Allow override of retry settings at method-level for deleteFeed. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteFeedRetry;
  /**
   * Allow override of retry settings at method-level for searchAllResources. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry searchAllResourcesRetry;
  /**
   * Allow override of retry settings at method-level for searchAllIamPolicies. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry searchAllIamPoliciesRetry;
  /**
   * Allow override of retry settings at method-level for analyzeIamPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry analyzeIamPolicyRetry;
  /**
   * Allow override of retry settings at method-level for analyzeMove. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry analyzeMoveRetry;
  /**
   * Allow override of retry settings at method-level for queryAssets. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry queryAssetsRetry;
  /**
   * Allow override of retry settings at method-level for createSavedQuery. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createSavedQueryRetry;
  /**
   * Allow override of retry settings at method-level for getSavedQuery. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getSavedQueryRetry;
  /**
   * Allow override of retry settings at method-level for listSavedQueries. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listSavedQueriesRetry;
  /**
   * Allow override of retry settings at method-level for updateSavedQuery. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateSavedQueryRetry;
  /**
   * Allow override of retry settings at method-level for deleteSavedQuery. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteSavedQueryRetry;
  /**
   * Allow override of retry settings at method-level for batchGetEffectiveIamPolicies. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry batchGetEffectiveIamPoliciesRetry;
  /**
   * Allow override of retry settings at method-level for analyzeOrgPolicies. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry analyzeOrgPoliciesRetry;
  /**
   * Allow override of retry settings at method-level for analyzeOrgPolicyGovernedContainers. If
   * defined, this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry analyzeOrgPolicyGovernedContainersRetry;
  /**
   * Allow override of retry settings at method-level for analyzeOrgPolicyGovernedAssets. If
   * defined, this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry analyzeOrgPolicyGovernedAssetsRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getListAssetsRetry() {
    return this.listAssetsRetry;
  }

  public void setListAssetsRetry(Retry listAssetsRetry) {
    this.listAssetsRetry = listAssetsRetry;
  }

  public Retry getBatchGetAssetsHistoryRetry() {
    return this.batchGetAssetsHistoryRetry;
  }

  public void setBatchGetAssetsHistoryRetry(Retry batchGetAssetsHistoryRetry) {
    this.batchGetAssetsHistoryRetry = batchGetAssetsHistoryRetry;
  }

  public Retry getCreateFeedRetry() {
    return this.createFeedRetry;
  }

  public void setCreateFeedRetry(Retry createFeedRetry) {
    this.createFeedRetry = createFeedRetry;
  }

  public Retry getGetFeedRetry() {
    return this.getFeedRetry;
  }

  public void setGetFeedRetry(Retry getFeedRetry) {
    this.getFeedRetry = getFeedRetry;
  }

  public Retry getListFeedsRetry() {
    return this.listFeedsRetry;
  }

  public void setListFeedsRetry(Retry listFeedsRetry) {
    this.listFeedsRetry = listFeedsRetry;
  }

  public Retry getUpdateFeedRetry() {
    return this.updateFeedRetry;
  }

  public void setUpdateFeedRetry(Retry updateFeedRetry) {
    this.updateFeedRetry = updateFeedRetry;
  }

  public Retry getDeleteFeedRetry() {
    return this.deleteFeedRetry;
  }

  public void setDeleteFeedRetry(Retry deleteFeedRetry) {
    this.deleteFeedRetry = deleteFeedRetry;
  }

  public Retry getSearchAllResourcesRetry() {
    return this.searchAllResourcesRetry;
  }

  public void setSearchAllResourcesRetry(Retry searchAllResourcesRetry) {
    this.searchAllResourcesRetry = searchAllResourcesRetry;
  }

  public Retry getSearchAllIamPoliciesRetry() {
    return this.searchAllIamPoliciesRetry;
  }

  public void setSearchAllIamPoliciesRetry(Retry searchAllIamPoliciesRetry) {
    this.searchAllIamPoliciesRetry = searchAllIamPoliciesRetry;
  }

  public Retry getAnalyzeIamPolicyRetry() {
    return this.analyzeIamPolicyRetry;
  }

  public void setAnalyzeIamPolicyRetry(Retry analyzeIamPolicyRetry) {
    this.analyzeIamPolicyRetry = analyzeIamPolicyRetry;
  }

  public Retry getAnalyzeMoveRetry() {
    return this.analyzeMoveRetry;
  }

  public void setAnalyzeMoveRetry(Retry analyzeMoveRetry) {
    this.analyzeMoveRetry = analyzeMoveRetry;
  }

  public Retry getQueryAssetsRetry() {
    return this.queryAssetsRetry;
  }

  public void setQueryAssetsRetry(Retry queryAssetsRetry) {
    this.queryAssetsRetry = queryAssetsRetry;
  }

  public Retry getCreateSavedQueryRetry() {
    return this.createSavedQueryRetry;
  }

  public void setCreateSavedQueryRetry(Retry createSavedQueryRetry) {
    this.createSavedQueryRetry = createSavedQueryRetry;
  }

  public Retry getGetSavedQueryRetry() {
    return this.getSavedQueryRetry;
  }

  public void setGetSavedQueryRetry(Retry getSavedQueryRetry) {
    this.getSavedQueryRetry = getSavedQueryRetry;
  }

  public Retry getListSavedQueriesRetry() {
    return this.listSavedQueriesRetry;
  }

  public void setListSavedQueriesRetry(Retry listSavedQueriesRetry) {
    this.listSavedQueriesRetry = listSavedQueriesRetry;
  }

  public Retry getUpdateSavedQueryRetry() {
    return this.updateSavedQueryRetry;
  }

  public void setUpdateSavedQueryRetry(Retry updateSavedQueryRetry) {
    this.updateSavedQueryRetry = updateSavedQueryRetry;
  }

  public Retry getDeleteSavedQueryRetry() {
    return this.deleteSavedQueryRetry;
  }

  public void setDeleteSavedQueryRetry(Retry deleteSavedQueryRetry) {
    this.deleteSavedQueryRetry = deleteSavedQueryRetry;
  }

  public Retry getBatchGetEffectiveIamPoliciesRetry() {
    return this.batchGetEffectiveIamPoliciesRetry;
  }

  public void setBatchGetEffectiveIamPoliciesRetry(Retry batchGetEffectiveIamPoliciesRetry) {
    this.batchGetEffectiveIamPoliciesRetry = batchGetEffectiveIamPoliciesRetry;
  }

  public Retry getAnalyzeOrgPoliciesRetry() {
    return this.analyzeOrgPoliciesRetry;
  }

  public void setAnalyzeOrgPoliciesRetry(Retry analyzeOrgPoliciesRetry) {
    this.analyzeOrgPoliciesRetry = analyzeOrgPoliciesRetry;
  }

  public Retry getAnalyzeOrgPolicyGovernedContainersRetry() {
    return this.analyzeOrgPolicyGovernedContainersRetry;
  }

  public void setAnalyzeOrgPolicyGovernedContainersRetry(
      Retry analyzeOrgPolicyGovernedContainersRetry) {
    this.analyzeOrgPolicyGovernedContainersRetry = analyzeOrgPolicyGovernedContainersRetry;
  }

  public Retry getAnalyzeOrgPolicyGovernedAssetsRetry() {
    return this.analyzeOrgPolicyGovernedAssetsRetry;
  }

  public void setAnalyzeOrgPolicyGovernedAssetsRetry(Retry analyzeOrgPolicyGovernedAssetsRetry) {
    this.analyzeOrgPolicyGovernedAssetsRetry = analyzeOrgPolicyGovernedAssetsRetry;
  }
}
