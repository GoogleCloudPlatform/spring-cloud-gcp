<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
         child.project.url.inherit.append.path="false">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.google.cloud</groupId>
	<artifactId>spring-cloud-gcp</artifactId>
	<version>3.7.1-SNAPSHOT</version><!-- {x-version-update:spring-cloud-gcp:current} -->

	<name>Spring Framework on Google Cloud</name>
	<description>Spring Framework on Google Cloud</description>
	<url>https://spring.io/projects/spring-cloud-gcp</url>
	<packaging>pom</packaging>

	<scm>
		<url>https://github.com/GoogleCloudPlatform/spring-cloud-gcp</url>
		<connection>scm:git:git://github.com/GoogleCloudPlatform/spring-cloud-gcp.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/GoogleCloudPlatform/spring-cloud-gcp.git</developerConnection>
		<tag>HEAD</tag>
	</scm>
	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/GoogleCloudPlatform/spring-cloud-gcp/issues</url>
	</issueManagement>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://google.oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://google.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<properties>
		<project.parent.version>${project.version}</project.parent.version>

		<!-- Dependency versions -->
		<spring-cloud-dependencies.version>2021.0.8</spring-cloud-dependencies.version>
		<spring-cloud-gcp-dependencies.version>${project.parent.version}</spring-cloud-gcp-dependencies.version>
		<spring-boot-dependencies.version>2.7.15</spring-boot-dependencies.version>
		<zipkin-gcp.version>1.0.4</zipkin-gcp.version>
		<java-cfenv.version>2.5.0</java-cfenv.version>
		<spring-native.version>0.10.5</spring-native.version>

		<!-- Plugin versions -->
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-failsafe-plugin.version>2.22.1</maven-failsafe-plugin.version>
		<maven-flatten-plugin.version>1.5.0</maven-flatten-plugin.version>
		<maven-gpg-plugin.version>3.1.0</maven-gpg-plugin.version>
		<maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>3.6.0</maven-javadoc-plugin.version>
		<maven-source-plugin.version>3.3.0</maven-source-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<nexus-staging-plugin.version>1.6.13</nexus-staging-plugin.version>
		<maven-checkstyle-plugin.version>3.3.0</maven-checkstyle-plugin.version>
		<checkstyle-rules.version>9.3</checkstyle-rules.version>
		<asciidoctor-maven-plugin.version>2.0.0</asciidoctor-maven-plugin.version>
		<errorprone.version>2.22.0</errorprone.version>


		<!-- All checks except for javadoc enforced by default -->
		<skip.failsafe.tests>${skipTests}</skip.failsafe.tests>
		<skip.surefire.tests>${skipTests}</skip.surefire.tests>
		<skipTests>false</skipTests>
		<checkstyle.skip>false</checkstyle.skip>
		<javadoc.failOnError>false</javadoc.failOnError>
		<javadoc.failOnWarnings>false</javadoc.failOnWarnings>
		<!-- Other defaults -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<integration-test.pattern>**/*IntegrationTest*</integration-test.pattern>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.google.cloud</groupId>
				<artifactId>spring-cloud-gcp-dependencies</artifactId>
				<version>${spring-cloud-gcp-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback.contrib</groupId>
				<artifactId>logback-json-classic</artifactId>
				<version>0.1.5</version>
			</dependency>

			<dependency>
				<groupId>io.zipkin.gcp</groupId>
				<artifactId>zipkin-sender-stackdriver</artifactId>
				<version>${zipkin-gcp.version}</version>
				<exclusions>
					<exclusion>
						<groupId>io.zipkin.zipkin2</groupId>
						<artifactId>zipkin</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>io.zipkin.gcp</groupId>
				<artifactId>brave-propagation-stackdriver</artifactId>
				<version>${zipkin-gcp.version}</version>
				<exclusions>
					<exclusion>
						<groupId>io.zipkin.brave</groupId>
						<artifactId>brave</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>io.pivotal.cfenv</groupId>
				<artifactId>java-cfenv</artifactId>
				<version>${java-cfenv.version}</version>
			</dependency>

			<dependency>
				<groupId>io.pivotal.cfenv</groupId>
				<artifactId>java-cfenv-test-support</artifactId>
				<version>${java-cfenv.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.experimental</groupId>
				<artifactId>spring-native-configuration</artifactId>
				<version>${spring-native.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.experimental</groupId>
				<artifactId>spring-aot</artifactId>
				<version>${spring-native.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>4.2.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<argLine>-Xms512m -Xmx512m</argLine>
						<skip>${skip.surefire.tests}</skip>
						<excludes>
							<exclude>${integration-test.pattern}</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<configuration>
						<skip>${skip.failsafe.tests}</skip>
						<includes>
							<include>${integration-test.pattern}</include>
						</includes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${checkstyle-rules.version}</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<executions>
					<execution>
						<id>validate-google-style</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<configLocation>google_checks.xml</configLocation>
							<suppressionsLocation>src/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
							<failOnViolation>true</failOnViolation>
							<violationSeverity>warning</violationSeverity>
						</configuration>
					</execution>
					<execution>
						<id>validate-custom</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<configLocation>src/checkstyle/custom-checks.xml</configLocation>
							<headerLocation>src/checkstyle/java.header</headerLocation>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<property>
					<name>!release</name>
				</property>
			</activation>
			<modules>
				<!-- POM Modules-->
				<module>spring-cloud-gcp-starters</module>
				<module>spring-cloud-gcp-dependencies</module>

				<!-- Code Modules -->
				<module>spring-cloud-gcp-autoconfigure</module>
				<module>spring-cloud-gcp-bigquery</module>
				<module>spring-cloud-gcp-cloudfoundry</module>
				<module>spring-cloud-gcp-core</module>
				<module>spring-cloud-gcp-data-datastore</module>
				<module>spring-cloud-gcp-data-firestore</module>
				<module>spring-cloud-gcp-data-spanner</module>
				<module>spring-cloud-gcp-logging</module>
				<module>spring-cloud-gcp-pubsub</module>
				<module>spring-cloud-gcp-pubsub-stream-binder</module>
				<module>spring-cloud-gcp-security-iap</module>
				<module>spring-cloud-gcp-storage</module>
				<module>spring-cloud-gcp-secretmanager</module>
				<module>spring-cloud-gcp-security-firebase</module>
				<module>spring-cloud-gcp-vision</module>
				<module>spring-cloud-gcp-kms</module>
				<module>spring-cloud-gcp-native-support</module>
				<module>spring-cloud-spanner-spring-data-r2dbc</module>

				<!-- Docs and Samples -->
				<module>docs</module>
				<module>spring-cloud-gcp-samples</module>
			</modules>
		</profile>


		<profile>
			<!-- cloud RAD generation -->
			<id>docFX</id>
			<activation>
				<property>
					<!-- activate with -P docFX -->
					<name>docFX</name>
				</property>
				<jdk>11</jdk>
			</activation>
			<properties>
				<!-- default config values -->
				<docletName>java-docfx-doclet-1.6.0</docletName>
				<outputpath>${project.build.directory}/docfx-yml</outputpath>
				<projectname>spring-framework-on-google-cloud</projectname>
				<excludeclasses></excludeclasses>
				<excludePackages></excludePackages>
				<source>8</source>
				<sourceFileExclude></sourceFileExclude>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven-javadoc-plugin.version}</version>
						<configuration>
							<doclet>com.microsoft.doclet.DocFxDoclet</doclet>
							<useStandardDocletOptions>false</useStandardDocletOptions>
							<!-- custom config with -Dproperty=value -->
							<docletPath>${env.KOKORO_GFILE_DIR}/${docletName}.jar</docletPath>
							<additionalOptions>
								-outputpath ${outputpath}
								-projectname ${projectname}
								-excludeclasses ${excludeclasses}:
								-excludepackages ${excludePackages}:
								-disable-changelog true
							</additionalOptions>
							<doclint>none</doclint>
							<show>protected</show>
							<nohelp>true</nohelp>
							<source>${source}</source>
							<sourceFileExcludes>
								<exclude>${sourceFileExclude}</exclude>
							</sourceFileExcludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Code Coverage -->
		<profile>
			<id>codecov</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<!-- need for JaCoCo -->
							<argLine>@{argLine} -Xms512m -Xmx512m</argLine>
							<includes>
								<include>**/*Tests.java</include>
								<include>**/*Test.java</include>
							</includes>
							<excludes>
								<exclude>**/Abstract*.java</exclude>
								<exclude>${integration-test.pattern}</exclude>
							</excludes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.10</version>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- JDK 16+ configuration -->
		<profile>
			<id>jdk_16_and_up</id>
			<activation>
				<jdk>[16,]</jdk>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<configuration>
								<!-- illegal-access=permit is needed to make GCLIB proxying work, used in Datastore -->
								<argLine>-Xms512m -Xmx512m --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.math=ALL-UNNAMED</argLine>
								<skip>${skip.surefire.tests}</skip>
								<excludes>
									<exclude>${integration-test.pattern}</exclude>
								</excludes>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-failsafe-plugin</artifactId>
							<version>${maven-failsafe-plugin.version}</version>
							<configuration>
								<skip>${skip.failsafe.tests}</skip>
								<includes>
									<include>${integration-test.pattern}</include>
								</includes>
								<argLine>-Xms512m -Xmx512m --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.math=ALL-UNNAMED</argLine>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<!-- Error prone; JDK 8 requires a different configuration than 9+ -->
		<profile>
			<id>errorprone_java_9_and_up</id>
			<activation>
				<jdk>[9,]</jdk>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>3.11.0</version>
							<configuration>
								<source>${maven.compiler.source}</source>
								<target>${maven.compiler.target}</target>
								<encoding>UTF-8</encoding>
								<fork>true</fork>
								<compilerArgs>
									<arg>-XDcompilePolicy=simple</arg>
									<arg>-Xplugin:ErrorProne -Xep:UnicodeInCode:OFF</arg>
									<!-- See: https://github.com/GoogleCloudPlatform/spring-cloud-gcp/pull/92 -->
									<arg>-parameters</arg>
									<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
									<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
									<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
									<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
									<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
									<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
									<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
									<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
									<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
									<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
								</compilerArgs>
								<annotationProcessorPaths>
									<path>
										<groupId>com.google.errorprone</groupId>
										<artifactId>error_prone_core</artifactId>
										<version>${errorprone.version}</version>
									</path>
								</annotationProcessorPaths>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>

		<profile>
			<id>errorprone_java8</id>
			<activation>
				<jdk>1.8</jdk>
			</activation>
			<properties>
				<javac.version>9+181-r4173-1</javac.version>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>3.11.0</version>
							<configuration>
								<fork>true</fork>
								<compilerArgs combine.children="append">
									<arg>-J-Xbootclasspath/p:${settings.localRepository}/com/google/errorprone/javac/${javac.version}/javac-${javac.version}.jar</arg>
									<!-- See: https://github.com/GoogleCloudPlatform/spring-cloud-gcp/pull/92 -->
									<arg>-parameters</arg>
								</compilerArgs>
							</configuration>
							<dependencies>
								<dependency>
									<groupId>com.google.errorprone</groupId>
									<artifactId>error_prone_core</artifactId>
									<version>${errorprone.version}</version>
								</dependency>
							</dependencies>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>

		<!-- Handles deploying snapshots and releases. -->
		<profile>
			<id>release</id>
			<activation>
				<property>
					<name>release</name>
				</property>
			</activation>
			<modules>
				<!-- POM Modules-->
				<module>spring-cloud-gcp-starters</module>
				<module>spring-cloud-gcp-dependencies</module>

				<!-- Code Modules-->
				<module>spring-cloud-gcp-autoconfigure</module>
				<module>spring-cloud-gcp-bigquery</module>
				<module>spring-cloud-gcp-cloudfoundry</module>
				<module>spring-cloud-gcp-core</module>
				<module>spring-cloud-gcp-data-datastore</module>
				<module>spring-cloud-gcp-data-firestore</module>
				<module>spring-cloud-gcp-data-spanner</module>
				<module>spring-cloud-gcp-logging</module>
				<module>spring-cloud-gcp-pubsub</module>
				<module>spring-cloud-gcp-pubsub-stream-binder</module>
				<module>spring-cloud-gcp-security-iap</module>
				<module>spring-cloud-gcp-storage</module>
				<module>spring-cloud-gcp-secretmanager</module>
				<module>spring-cloud-gcp-security-firebase</module>
				<module>spring-cloud-gcp-vision</module>
				<module>spring-cloud-gcp-kms</module>
				<module>spring-cloud-spanner-spring-data-r2dbc</module>
			</modules>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-gpg-plugin</artifactId>
							<version>${maven-gpg-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>${maven-javadoc-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-source-plugin</artifactId>
							<version>${maven-source-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>flatten-maven-plugin</artifactId>
							<version>${maven-flatten-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.sonatype.plugins</groupId>
							<artifactId>nexus-staging-maven-plugin</artifactId>
							<version>${nexus-staging-plugin.version}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://google.oss.sonatype.org/</nexusUrl>
							<stagingProgressTimeoutMinutes>15</stagingProgressTimeoutMinutes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>javadoc</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<phase>package</phase>
							</execution>
							<execution>
								<id>aggregate</id>
								<goals>
									<goal>aggregate-no-fork</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
						<configuration>
							<!-- https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8212233 -->
							<source>8</source>
							<excludePackageNames>
								com.example,
								com.example.*,
								<!-- Exclude samples and classes in the Firestore Google Client library packages -->
								com.google.cloud.firestore
							</excludePackageNames>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>flatten-maven-plugin</artifactId>
						<inherited>true</inherited>
						<executions>
							<execution>
								<!-- Tidy up all POMs before they are published -->
								<id>flatten</id>
								<phase>process-resources</phase>
								<goals>
									<goal>flatten</goal>
								</goals>
								<configuration>
									<updatePomFile>true</updatePomFile>
									<flattenMode>oss</flattenMode>
									<pomElements>
										<parent>expand</parent>
										<distributionManagement>remove</distributionManagement>
										<repositories>remove</repositories>
									</pomElements>
								</configuration>
							</execution>
							<execution>
								<id>flatten.clean</id>
								<phase>clean</phase>
								<goals>
									<goal>clean</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>compatibility-check</id>
			<activation>
				<property>
					<name>compatibilityCheckRepository</name>
				</property>
			</activation>
			<dependencyManagement>
				<dependencies>
					<!-- {x-cross-repo-check-dependency-mark} -->
				</dependencies>
			</dependencyManagement>

			<repositories>
				<repository>
					<id>compatibility-check-repository</id>
					<name>Repository for Compatibility Checl</name>
					<url>${compatibilityCheckRepository}</url>
				</repository>
			</repositories>
		</profile>
	</profiles>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0</url>
			<comments>
				Copyright 2015-2020 the original author or authors.

				Licensed under the Apache License, Version 2.0 (the "License");
				you may not use this file except in compliance with the License.
				You may obtain a copy of the License at

				https://www.apache.org/licenses/LICENSE-2.0

				Unless required by applicable law or agreed to in writing, software
				distributed under the License is distributed on an "AS IS" BASIS,
				WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
				implied.

				See the License for the specific language governing permissions and
				limitations under the License.
			</comments>
		</license>
	</licenses>
	<developers>
		<developer>
			<organization>Google</organization>
			<organizationUrl>http://cloud.google.com</organizationUrl>
		</developer>
	</developers>
</project>
