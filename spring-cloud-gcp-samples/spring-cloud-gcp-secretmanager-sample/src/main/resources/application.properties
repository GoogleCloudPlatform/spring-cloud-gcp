# You can directly load the secret into a variable, as in this example
# This demonstrates multiple ways of loading the same application secret using template syntax.
#
# Please refer to the Spring Cloud GCP Secret Manager reference documentation for the full protocol syntax.

# You can also specify a secret from another project.
# example.property=${sm://MY_PROJECT/MY_SECRET_ID/MY_VERSION}

# Using SpEL, you can reference an environment variable and fallback to a secret if it is missing.
# example.secret=${MY_ENV_VARIABLE:${sm://application-secret/latest}}

management.endpoints.web.exposure.include=refresh
# enable external resource from GCP Secret Manager.
spring.config.import=sm://
application.secret=${sm://application-secret}
# enable default secret value when accessing non-exited secret.
spring.cloud.gcp.secretmanager.allow-default-secret=true
