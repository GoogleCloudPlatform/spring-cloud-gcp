package com.google.showcase.v1beta1.spring;

import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for Compliance client bean */
@ConfigurationProperties("com.google.showcase.v1beta1.compliance")
public class ComplianceSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty private final Credentials credentials = new Credentials();
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for repeatDataBody. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry repeatDataBodyRetry;
  /**
   * Allow override of retry settings at method-level for repeatDataBodyInfo. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry repeatDataBodyInfoRetry;
  /**
   * Allow override of retry settings at method-level for repeatDataQuery. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry repeatDataQueryRetry;
  /**
   * Allow override of retry settings at method-level for repeatDataSimplePath. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry repeatDataSimplePathRetry;
  /**
   * Allow override of retry settings at method-level for repeatDataPathResource. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry repeatDataPathResourceRetry;
  /**
   * Allow override of retry settings at method-level for repeatDataPathTrailingResource. If
   * defined, this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry repeatDataPathTrailingResourceRetry;
  /**
   * Allow override of retry settings at method-level for getEnum. If defined, this takes precedence
   * over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getEnumRetry;
  /**
   * Allow override of retry settings at method-level for verifyEnum. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry verifyEnumRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getRepeatDataBodyRetry() {
    return this.repeatDataBodyRetry;
  }

  public void setRepeatDataBodyRetry(Retry repeatDataBodyRetry) {
    this.repeatDataBodyRetry = repeatDataBodyRetry;
  }

  public Retry getRepeatDataBodyInfoRetry() {
    return this.repeatDataBodyInfoRetry;
  }

  public void setRepeatDataBodyInfoRetry(Retry repeatDataBodyInfoRetry) {
    this.repeatDataBodyInfoRetry = repeatDataBodyInfoRetry;
  }

  public Retry getRepeatDataQueryRetry() {
    return this.repeatDataQueryRetry;
  }

  public void setRepeatDataQueryRetry(Retry repeatDataQueryRetry) {
    this.repeatDataQueryRetry = repeatDataQueryRetry;
  }

  public Retry getRepeatDataSimplePathRetry() {
    return this.repeatDataSimplePathRetry;
  }

  public void setRepeatDataSimplePathRetry(Retry repeatDataSimplePathRetry) {
    this.repeatDataSimplePathRetry = repeatDataSimplePathRetry;
  }

  public Retry getRepeatDataPathResourceRetry() {
    return this.repeatDataPathResourceRetry;
  }

  public void setRepeatDataPathResourceRetry(Retry repeatDataPathResourceRetry) {
    this.repeatDataPathResourceRetry = repeatDataPathResourceRetry;
  }

  public Retry getRepeatDataPathTrailingResourceRetry() {
    return this.repeatDataPathTrailingResourceRetry;
  }

  public void setRepeatDataPathTrailingResourceRetry(Retry repeatDataPathTrailingResourceRetry) {
    this.repeatDataPathTrailingResourceRetry = repeatDataPathTrailingResourceRetry;
  }

  public Retry getGetEnumRetry() {
    return this.getEnumRetry;
  }

  public void setGetEnumRetry(Retry getEnumRetry) {
    this.getEnumRetry = getEnumRetry;
  }

  public Retry getVerifyEnumRetry() {
    return this.verifyEnumRetry;
  }

  public void setVerifyEnumRetry(Retry verifyEnumRetry) {
    this.verifyEnumRetry = verifyEnumRetry;
  }
}
